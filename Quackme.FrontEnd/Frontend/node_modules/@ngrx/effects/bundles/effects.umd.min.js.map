{"version":3,"sources":["modules/effects/effects.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ngrx","effects","tslib","store","rxjs","operators","ng","core","this","DEFAULT_EFFECT_CONFIG","dispatch","useEffectsErrorHandler","getCreateEffectMetadata","instance","Object","getOwnPropertyNames","filter","propertyName","hasOwnProperty","map","__assign","getSourceForInstance","getPrototypeOf","getEffectDecoratorMetadata","compose","getEffectMetadataEntries","hasMetadataEntries","sourceProto","constructor","getSourceMetadata","reduce","sources","source","concat","mergeEffects","sourceInstance","globalErrorHandler","effectsErrorHandler","sourceName","name","observables$","_a","observable$","effectAction$","pipe","ignoreElements","materialize","notification","effect","merge","apply","__spread","defaultEffectsErrorHandler","errorHandler","retryAttemptLeft","catchError","error","handleError","Actions","_super","_this","call","Actions_1","__extends","prototype","lift","operator","observable","__decorate","Injectable","__param","Inject","ScannedActionsSubject","__metadata","Observable","isOnInitEffects","isFunction","functionName","_ROOT_EFFECTS_GUARD","InjectionToken","USER_PROVIDED_EFFECTS","_ROOT_EFFECTS","ROOT_EFFECTS","_FEATURE_EFFECTS","FEATURE_EFFECTS","EFFECTS_ERROR_HANDLER","EffectSources","addEffects","effectSourceInstance","next","toActions","groupBy","mergeMap","source$","effectsInstance","effect$","exhaustMap","resolveEffectSource","mergedEffects$","isOnRunEffects","ngrxOnRunEffects","output","reportInvalidActions","reporter","kind","action","value","isAction","type","Error","getEffectName","isMethod","String","stringify","JSON","dematerialize","init$","take","ngrxOnInitEffects","ErrorHandler","Function","Subject","isOnIdentifyEffects","ngrxOnIdentifyEffects","EffectsRunner","effectSources","effectsSubscription","start","subscribe","ngOnDestroy","unsubscribe","Store","rootEffectsInit","createAction","EffectsRootModule","runner","rootEffects","storeRootModule","storeFeatureModule","guard","forEach","NgModule","Optional","Array","StoreRootModule","StoreFeatureModule","EffectsFeatureModule","root","effectSourceGroups","group","EffectsModule","forFeature","featureEffects","ngModule","providers","provide","multi","useValue","useFactory","createEffects","deps","Injector","forRoot","_provideForRootGuard","SkipSelf","injector","effectGroups","userProvidedEffectGroups","e_1","e_2","_b","mergedEffects","effectGroups_1","__values","effectGroups_1_1","done","push","e_1_1","return","userProvidedEffectGroups_1","userProvidedEffectGroups_1_1","e_2_1","createEffectInstances","get","TypeError","Effect","config","target","addEffectMetadataEntry","metadata","defineProperty","ROOT_EFFECTS_INIT","act","configOrProject","errorFn","project","concatMap","complete","undefined","defer","subject","input","index","completed","errored","projectedCount","Notification","n","finalize","createEffect","getEffectsMetadata","acc","ofType","allowedTypes","_i","arguments","length","some","typeOrActionCreator","ɵngrx_modules_effects_effects_a","ɵngrx_modules_effects_effects_b","ɵngrx_modules_effects_effects_c","ɵngrx_modules_effects_effects_d","ɵngrx_modules_effects_effects_e","ɵngrx_modules_effects_effects_f","ɵngrx_modules_effects_effects_g","ɵngrx_modules_effects_effects_h"],"mappings":"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","sourcesContent":["/**\n * @license NgRx 9.1.0\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@ngrx/store'), require('rxjs'), require('rxjs/operators'), require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define('@ngrx/effects', ['exports', 'tslib', '@ngrx/store', 'rxjs', 'rxjs/operators', '@angular/core'], factory) :\n    (global = global || self, factory((global.ngrx = global.ngrx || {}, global.ngrx.effects = {}), global.tslib, global.ngrx.store, global.rxjs, global.rxjs.operators, global.ng.core));\n}(this, (function (exports, tslib, store, rxjs, operators, core) { 'use strict';\n\n    var DEFAULT_EFFECT_CONFIG = {\n        dispatch: true,\n        useEffectsErrorHandler: true,\n    };\n    var CREATE_EFFECT_METADATA_KEY = '__@ngrx/effects_create__';\n\n    /**\n     * @description\n     * Creates an effect from an `Observable` and an `EffectConfig`.\n     *\n     * @param source A function which returns an `Observable`.\n     * @param config A `Partial<EffectConfig>` to configure the effect.  By default, `dispatch` is true and `useEffectsErrorHandler` is true.\n     * @returns If `EffectConfig`#`dispatch` is true, returns `Observable<Action>`.  Else, returns `Observable<unknown>`.\n     *\n     * @usageNotes\n     *\n     * ** Mapping to a different action **\n     * ```ts\n     * effectName$ = createEffect(\n     *   () => this.actions$.pipe(\n     *     ofType(FeatureActions.actionOne),\n     *     map(() => FeatureActions.actionTwo())\n     *   )\n     * );\n     * ```\n     *\n     *  ** Non-dispatching effects **\n     * ```ts\n     * effectName$ = createEffect(\n     *   () => this.actions$.pipe(\n     *     ofType(FeatureActions.actionOne),\n     *     tap(() => console.log('Action One Dispatched'))\n     *   ),\n     *   { dispatch: false }\n     *   // FeatureActions.actionOne is not dispatched\n     * );\n     * ```\n     */\n    function createEffect(source, config) {\n        var effect = source();\n        var value = tslib.__assign(tslib.__assign({}, DEFAULT_EFFECT_CONFIG), config);\n        Object.defineProperty(effect, CREATE_EFFECT_METADATA_KEY, {\n            value: value,\n        });\n        return effect;\n    }\n    function getCreateEffectMetadata(instance) {\n        var propertyNames = Object.getOwnPropertyNames(instance);\n        var metadata = propertyNames\n            .filter(function (propertyName) {\n            return instance[propertyName] &&\n                instance[propertyName].hasOwnProperty(CREATE_EFFECT_METADATA_KEY);\n        })\n            .map(function (propertyName) {\n            var metaData = instance[propertyName][CREATE_EFFECT_METADATA_KEY];\n            return tslib.__assign({ propertyName: propertyName }, metaData);\n        });\n        return metadata;\n    }\n\n    function getSourceForInstance(instance) {\n        return Object.getPrototypeOf(instance);\n    }\n\n    var METADATA_KEY = '__@ngrx/effects__';\n    function Effect(config) {\n        if (config === void 0) { config = {}; }\n        return function (target, propertyName) {\n            var metadata = tslib.__assign(tslib.__assign(tslib.__assign({}, DEFAULT_EFFECT_CONFIG), config), { // Overrides any defaults if values are provided\n                propertyName: propertyName });\n            addEffectMetadataEntry(target, metadata);\n        };\n    }\n    function getEffectDecoratorMetadata(instance) {\n        var effectsDecorators = store.compose(getEffectMetadataEntries, getSourceForInstance)(instance);\n        return effectsDecorators;\n    }\n    /**\n     * Type guard to detemine whether METADATA_KEY is already present on the Class\n     * constructor\n     */\n    function hasMetadataEntries(sourceProto) {\n        return sourceProto.constructor.hasOwnProperty(METADATA_KEY);\n    }\n    /** Add Effect Metadata to the Effect Class constructor under specific key */\n    function addEffectMetadataEntry(sourceProto, metadata) {\n        if (hasMetadataEntries(sourceProto)) {\n            sourceProto.constructor[METADATA_KEY].push(metadata);\n        }\n        else {\n            Object.defineProperty(sourceProto.constructor, METADATA_KEY, {\n                value: [metadata],\n            });\n        }\n    }\n    function getEffectMetadataEntries(sourceProto) {\n        return hasMetadataEntries(sourceProto)\n            ? sourceProto.constructor[METADATA_KEY]\n            : [];\n    }\n\n    function getEffectsMetadata(instance) {\n        return getSourceMetadata(instance).reduce(function (acc, _a) {\n            var propertyName = _a.propertyName, dispatch = _a.dispatch, useEffectsErrorHandler = _a.useEffectsErrorHandler;\n            acc[propertyName] = { dispatch: dispatch, useEffectsErrorHandler: useEffectsErrorHandler };\n            return acc;\n        }, {});\n    }\n    function getSourceMetadata(instance) {\n        var effects = [\n            getEffectDecoratorMetadata,\n            getCreateEffectMetadata,\n        ];\n        return effects.reduce(function (sources, source) { return sources.concat(source(instance)); }, []);\n    }\n\n    function mergeEffects(sourceInstance, globalErrorHandler, effectsErrorHandler) {\n        var sourceName = getSourceForInstance(sourceInstance).constructor.name;\n        var observables$ = getSourceMetadata(sourceInstance).map(function (_a) {\n            var propertyName = _a.propertyName, dispatch = _a.dispatch, useEffectsErrorHandler = _a.useEffectsErrorHandler;\n            var observable$ = typeof sourceInstance[propertyName] === 'function'\n                ? sourceInstance[propertyName]()\n                : sourceInstance[propertyName];\n            var effectAction$ = useEffectsErrorHandler\n                ? effectsErrorHandler(observable$, globalErrorHandler)\n                : observable$;\n            if (dispatch === false) {\n                return effectAction$.pipe(operators.ignoreElements());\n            }\n            var materialized$ = effectAction$.pipe(operators.materialize());\n            return materialized$.pipe(operators.map(function (notification) { return ({\n                effect: sourceInstance[propertyName],\n                notification: notification,\n                propertyName: propertyName,\n                sourceName: sourceName,\n                sourceInstance: sourceInstance,\n            }); }));\n        });\n        return rxjs.merge.apply(void 0, tslib.__spread(observables$));\n    }\n\n    var MAX_NUMBER_OF_RETRY_ATTEMPTS = 10;\n    function defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft) {\n        if (retryAttemptLeft === void 0) { retryAttemptLeft = MAX_NUMBER_OF_RETRY_ATTEMPTS; }\n        return observable$.pipe(operators.catchError(function (error) {\n            if (errorHandler)\n                errorHandler.handleError(error);\n            if (retryAttemptLeft <= 1) {\n                return observable$; // last attempt\n            }\n            // Return observable that produces this particular effect\n            return defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft - 1);\n        }));\n    }\n\n    var Actions = /** @class */ (function (_super) {\n        tslib.__extends(Actions, _super);\n        function Actions(source) {\n            var _this = _super.call(this) || this;\n            if (source) {\n                _this.source = source;\n            }\n            return _this;\n        }\n        Actions_1 = Actions;\n        Actions.prototype.lift = function (operator) {\n            var observable = new Actions_1();\n            observable.source = this;\n            observable.operator = operator;\n            return observable;\n        };\n        var Actions_1;\n        Actions = Actions_1 = tslib.__decorate([\n            core.Injectable(),\n            tslib.__param(0, core.Inject(store.ScannedActionsSubject)),\n            tslib.__metadata(\"design:paramtypes\", [rxjs.Observable])\n        ], Actions);\n        return Actions;\n    }(rxjs.Observable));\n    function ofType() {\n        var allowedTypes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            allowedTypes[_i] = arguments[_i];\n        }\n        return operators.filter(function (action) {\n            return allowedTypes.some(function (typeOrActionCreator) {\n                if (typeof typeOrActionCreator === 'string') {\n                    // Comparing the string to type\n                    return typeOrActionCreator === action.type;\n                }\n                // We are filtering by ActionCreator\n                return typeOrActionCreator.type === action.type;\n            });\n        });\n    }\n\n    function reportInvalidActions(output, reporter) {\n        if (output.notification.kind === 'N') {\n            var action = output.notification.value;\n            var isInvalidAction = !isAction(action);\n            if (isInvalidAction) {\n                reporter.handleError(new Error(\"Effect \" + getEffectName(output) + \" dispatched an invalid action: \" + stringify(action)));\n            }\n        }\n    }\n    function isAction(action) {\n        return (typeof action !== 'function' &&\n            action &&\n            action.type &&\n            typeof action.type === 'string');\n    }\n    function getEffectName(_a) {\n        var propertyName = _a.propertyName, sourceInstance = _a.sourceInstance, sourceName = _a.sourceName;\n        var isMethod = typeof sourceInstance[propertyName] === 'function';\n        return \"\\\"\" + sourceName + \".\" + String(propertyName) + (isMethod ? '()' : '') + \"\\\"\";\n    }\n    function stringify(action) {\n        try {\n            return JSON.stringify(action);\n        }\n        catch (_a) {\n            return action;\n        }\n    }\n\n    var onIdentifyEffectsKey = 'ngrxOnIdentifyEffects';\n    function isOnIdentifyEffects(instance) {\n        return isFunction(instance, onIdentifyEffectsKey);\n    }\n    var onRunEffectsKey = 'ngrxOnRunEffects';\n    function isOnRunEffects(instance) {\n        return isFunction(instance, onRunEffectsKey);\n    }\n    var onInitEffects = 'ngrxOnInitEffects';\n    function isOnInitEffects(instance) {\n        return isFunction(instance, onInitEffects);\n    }\n    function isFunction(instance, functionName) {\n        return (instance &&\n            functionName in instance &&\n            typeof instance[functionName] === 'function');\n    }\n\n    var _ROOT_EFFECTS_GUARD = new core.InjectionToken('@ngrx/effects Internal Root Guard');\n    var IMMEDIATE_EFFECTS = new core.InjectionToken('ngrx/effects: Immediate Effects');\n    var USER_PROVIDED_EFFECTS = new core.InjectionToken('ngrx/effects: User Provided Effects');\n    var _ROOT_EFFECTS = new core.InjectionToken('ngrx/effects: Internal Root Effects');\n    var ROOT_EFFECTS = new core.InjectionToken('ngrx/effects: Root Effects');\n    var _FEATURE_EFFECTS = new core.InjectionToken('ngrx/effects: Internal Feature Effects');\n    var FEATURE_EFFECTS = new core.InjectionToken('ngrx/effects: Feature Effects');\n    var EFFECTS_ERROR_HANDLER = new core.InjectionToken('ngrx/effects: Effects Error Handler');\n\n    var EffectSources = /** @class */ (function (_super) {\n        tslib.__extends(EffectSources, _super);\n        function EffectSources(errorHandler, effectsErrorHandler) {\n            var _this = _super.call(this) || this;\n            _this.errorHandler = errorHandler;\n            _this.effectsErrorHandler = effectsErrorHandler;\n            return _this;\n        }\n        EffectSources.prototype.addEffects = function (effectSourceInstance) {\n            this.next(effectSourceInstance);\n        };\n        /**\n         * @internal\n         */\n        EffectSources.prototype.toActions = function () {\n            var _this = this;\n            return this.pipe(operators.groupBy(getSourceForInstance), operators.mergeMap(function (source$) {\n                return source$.pipe(operators.groupBy(effectsInstance));\n            }), operators.mergeMap(function (source$) {\n                var effect$ = source$.pipe(operators.exhaustMap(function (sourceInstance) {\n                    return resolveEffectSource(_this.errorHandler, _this.effectsErrorHandler)(sourceInstance);\n                }), operators.map(function (output) {\n                    reportInvalidActions(output, _this.errorHandler);\n                    return output.notification;\n                }), operators.filter(function (notification) {\n                    return notification.kind === 'N';\n                }), operators.dematerialize());\n                // start the stream with an INIT action\n                // do this only for the first Effect instance\n                var init$ = source$.pipe(operators.take(1), operators.filter(isOnInitEffects), operators.map(function (instance) { return instance.ngrxOnInitEffects(); }));\n                return rxjs.merge(effect$, init$);\n            }));\n        };\n        EffectSources = tslib.__decorate([\n            core.Injectable(),\n            tslib.__param(1, core.Inject(EFFECTS_ERROR_HANDLER)),\n            tslib.__metadata(\"design:paramtypes\", [core.ErrorHandler, Function])\n        ], EffectSources);\n        return EffectSources;\n    }(rxjs.Subject));\n    function effectsInstance(sourceInstance) {\n        if (isOnIdentifyEffects(sourceInstance)) {\n            return sourceInstance.ngrxOnIdentifyEffects();\n        }\n        return '';\n    }\n    function resolveEffectSource(errorHandler, effectsErrorHandler) {\n        return function (sourceInstance) {\n            var mergedEffects$ = mergeEffects(sourceInstance, errorHandler, effectsErrorHandler);\n            if (isOnRunEffects(sourceInstance)) {\n                return sourceInstance.ngrxOnRunEffects(mergedEffects$);\n            }\n            return mergedEffects$;\n        };\n    }\n\n    var EffectsRunner = /** @class */ (function () {\n        function EffectsRunner(effectSources, store) {\n            this.effectSources = effectSources;\n            this.store = store;\n            this.effectsSubscription = null;\n        }\n        EffectsRunner.prototype.start = function () {\n            if (!this.effectsSubscription) {\n                this.effectsSubscription = this.effectSources\n                    .toActions()\n                    .subscribe(this.store);\n            }\n        };\n        EffectsRunner.prototype.ngOnDestroy = function () {\n            if (this.effectsSubscription) {\n                this.effectsSubscription.unsubscribe();\n                this.effectsSubscription = null;\n            }\n        };\n        EffectsRunner = tslib.__decorate([\n            core.Injectable(),\n            tslib.__metadata(\"design:paramtypes\", [EffectSources,\n                store.Store])\n        ], EffectsRunner);\n        return EffectsRunner;\n    }());\n\n    var ROOT_EFFECTS_INIT = '@ngrx/effects/init';\n    var rootEffectsInit = store.createAction(ROOT_EFFECTS_INIT);\n    var EffectsRootModule = /** @class */ (function () {\n        function EffectsRootModule(sources, runner, store, rootEffects, storeRootModule, storeFeatureModule, guard) {\n            this.sources = sources;\n            runner.start();\n            rootEffects.forEach(function (effectSourceInstance) {\n                return sources.addEffects(effectSourceInstance);\n            });\n            store.dispatch({ type: ROOT_EFFECTS_INIT });\n        }\n        EffectsRootModule.prototype.addEffects = function (effectSourceInstance) {\n            this.sources.addEffects(effectSourceInstance);\n        };\n        EffectsRootModule = tslib.__decorate([\n            core.NgModule({}),\n            tslib.__param(3, core.Inject(ROOT_EFFECTS)),\n            tslib.__param(4, core.Optional()),\n            tslib.__param(5, core.Optional()),\n            tslib.__param(6, core.Optional()),\n            tslib.__param(6, core.Inject(_ROOT_EFFECTS_GUARD)),\n            tslib.__metadata(\"design:paramtypes\", [EffectSources,\n                EffectsRunner,\n                store.Store, Array, store.StoreRootModule,\n                store.StoreFeatureModule, Object])\n        ], EffectsRootModule);\n        return EffectsRootModule;\n    }());\n\n    var EffectsFeatureModule = /** @class */ (function () {\n        function EffectsFeatureModule(root, effectSourceGroups, storeRootModule, storeFeatureModule) {\n            effectSourceGroups.forEach(function (group) {\n                return group.forEach(function (effectSourceInstance) {\n                    return root.addEffects(effectSourceInstance);\n                });\n            });\n        }\n        EffectsFeatureModule = tslib.__decorate([\n            core.NgModule({}),\n            tslib.__param(1, core.Inject(FEATURE_EFFECTS)),\n            tslib.__param(2, core.Optional()),\n            tslib.__param(3, core.Optional()),\n            tslib.__metadata(\"design:paramtypes\", [EffectsRootModule, Array, store.StoreRootModule,\n                store.StoreFeatureModule])\n        ], EffectsFeatureModule);\n        return EffectsFeatureModule;\n    }());\n\n    var EffectsModule = /** @class */ (function () {\n        function EffectsModule() {\n        }\n        EffectsModule.forFeature = function (featureEffects) {\n            if (featureEffects === void 0) { featureEffects = []; }\n            return {\n                ngModule: EffectsFeatureModule,\n                providers: [\n                    featureEffects,\n                    {\n                        provide: _FEATURE_EFFECTS,\n                        multi: true,\n                        useValue: featureEffects,\n                    },\n                    {\n                        provide: USER_PROVIDED_EFFECTS,\n                        multi: true,\n                        useValue: [],\n                    },\n                    {\n                        provide: FEATURE_EFFECTS,\n                        multi: true,\n                        useFactory: createEffects,\n                        deps: [core.Injector, _FEATURE_EFFECTS, USER_PROVIDED_EFFECTS],\n                    },\n                ],\n            };\n        };\n        EffectsModule.forRoot = function (rootEffects) {\n            if (rootEffects === void 0) { rootEffects = []; }\n            return {\n                ngModule: EffectsRootModule,\n                providers: [\n                    {\n                        provide: _ROOT_EFFECTS_GUARD,\n                        useFactory: _provideForRootGuard,\n                        deps: [[EffectsRunner, new core.Optional(), new core.SkipSelf()]],\n                    },\n                    {\n                        provide: EFFECTS_ERROR_HANDLER,\n                        useValue: defaultEffectsErrorHandler,\n                    },\n                    EffectsRunner,\n                    EffectSources,\n                    Actions,\n                    rootEffects,\n                    {\n                        provide: _ROOT_EFFECTS,\n                        useValue: [rootEffects],\n                    },\n                    {\n                        provide: USER_PROVIDED_EFFECTS,\n                        multi: true,\n                        useValue: [],\n                    },\n                    {\n                        provide: ROOT_EFFECTS,\n                        useFactory: createEffects,\n                        deps: [core.Injector, _ROOT_EFFECTS, USER_PROVIDED_EFFECTS],\n                    },\n                ],\n            };\n        };\n        EffectsModule = tslib.__decorate([\n            core.NgModule({})\n        ], EffectsModule);\n        return EffectsModule;\n    }());\n    function createEffects(injector, effectGroups, userProvidedEffectGroups) {\n        var e_1, _a, e_2, _b;\n        var mergedEffects = [];\n        try {\n            for (var effectGroups_1 = tslib.__values(effectGroups), effectGroups_1_1 = effectGroups_1.next(); !effectGroups_1_1.done; effectGroups_1_1 = effectGroups_1.next()) {\n                var effectGroup = effectGroups_1_1.value;\n                mergedEffects.push.apply(mergedEffects, tslib.__spread(effectGroup));\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (effectGroups_1_1 && !effectGroups_1_1.done && (_a = effectGroups_1.return)) _a.call(effectGroups_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        try {\n            for (var userProvidedEffectGroups_1 = tslib.__values(userProvidedEffectGroups), userProvidedEffectGroups_1_1 = userProvidedEffectGroups_1.next(); !userProvidedEffectGroups_1_1.done; userProvidedEffectGroups_1_1 = userProvidedEffectGroups_1.next()) {\n                var userProvidedEffectGroup = userProvidedEffectGroups_1_1.value;\n                mergedEffects.push.apply(mergedEffects, tslib.__spread(userProvidedEffectGroup));\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (userProvidedEffectGroups_1_1 && !userProvidedEffectGroups_1_1.done && (_b = userProvidedEffectGroups_1.return)) _b.call(userProvidedEffectGroups_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return createEffectInstances(injector, mergedEffects);\n    }\n    function createEffectInstances(injector, effects) {\n        return effects.map(function (effect) { return injector.get(effect); });\n    }\n    function _provideForRootGuard(runner) {\n        if (runner) {\n            throw new TypeError(\"EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.\");\n        }\n        return 'guarded';\n    }\n\n    function act(\n    /** Allow to take either config object or project/error functions */\n    configOrProject, errorFn) {\n        var _a = typeof configOrProject === 'function'\n            ? {\n                project: configOrProject,\n                error: errorFn,\n                operator: operators.concatMap,\n                complete: undefined,\n                unsubscribe: undefined,\n            }\n            : tslib.__assign(tslib.__assign({}, configOrProject), { operator: configOrProject.operator || operators.concatMap }), project = _a.project, error = _a.error, complete = _a.complete, operator = _a.operator, unsubscribe = _a.unsubscribe;\n        return function (source) {\n            return rxjs.defer(function () {\n                var subject = new rxjs.Subject();\n                return rxjs.merge(source.pipe(operator(function (input, index) {\n                    return rxjs.defer(function () {\n                        var completed = false;\n                        var errored = false;\n                        var projectedCount = 0;\n                        return project(input, index).pipe(operators.materialize(), operators.map(function (notification) {\n                            switch (notification.kind) {\n                                case 'E':\n                                    errored = true;\n                                    return new rxjs.Notification(\n                                    // TODO: remove any in RxJS 6.5\n                                    'N', error(notification.error, input));\n                                case 'C':\n                                    completed = true;\n                                    return complete\n                                        ? new rxjs.Notification(\n                                        // TODO: remove any in RxJS 6.5\n                                        'N', complete(projectedCount, input))\n                                        : undefined;\n                                default:\n                                    ++projectedCount;\n                                    return notification;\n                            }\n                        }), operators.filter(function (n) { return n != null; }), operators.dematerialize(), operators.finalize(function () {\n                            if (!completed && !errored && unsubscribe) {\n                                subject.next(unsubscribe(projectedCount, input));\n                            }\n                        }));\n                    });\n                })), subject);\n            });\n        };\n    }\n\n    /**\n     * DO NOT EDIT\n     *\n     * This file is automatically generated at build\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Actions = Actions;\n    exports.EFFECTS_ERROR_HANDLER = EFFECTS_ERROR_HANDLER;\n    exports.Effect = Effect;\n    exports.EffectSources = EffectSources;\n    exports.EffectsFeatureModule = EffectsFeatureModule;\n    exports.EffectsModule = EffectsModule;\n    exports.EffectsRootModule = EffectsRootModule;\n    exports.EffectsRunner = EffectsRunner;\n    exports.ROOT_EFFECTS_INIT = ROOT_EFFECTS_INIT;\n    exports.USER_PROVIDED_EFFECTS = USER_PROVIDED_EFFECTS;\n    exports.act = act;\n    exports.createEffect = createEffect;\n    exports.defaultEffectsErrorHandler = defaultEffectsErrorHandler;\n    exports.getEffectsMetadata = getEffectsMetadata;\n    exports.mergeEffects = mergeEffects;\n    exports.ofType = ofType;\n    exports.rootEffectsInit = rootEffectsInit;\n    exports.ɵngrx_modules_effects_effects_a = getSourceMetadata;\n    exports.ɵngrx_modules_effects_effects_b = createEffects;\n    exports.ɵngrx_modules_effects_effects_c = _provideForRootGuard;\n    exports.ɵngrx_modules_effects_effects_d = _ROOT_EFFECTS_GUARD;\n    exports.ɵngrx_modules_effects_effects_e = _ROOT_EFFECTS;\n    exports.ɵngrx_modules_effects_effects_f = ROOT_EFFECTS;\n    exports.ɵngrx_modules_effects_effects_g = _FEATURE_EFFECTS;\n    exports.ɵngrx_modules_effects_effects_h = FEATURE_EFFECTS;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=effects.umd.js.map\n"]}