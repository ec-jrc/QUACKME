{"version":3,"file":"stepper.js","sources":["../../../../../../src/material/stepper/step-label.ts","../../../../../../src/material/stepper/stepper-intl.ts","../../../../../../src/material/stepper/step-header.ts","../../../../../../src/material/stepper/stepper-animations.ts","../../../../../../src/material/stepper/stepper-icon.ts","../../../../../../src/material/stepper/stepper.ts","../../../../../../src/material/stepper/stepper-button.ts","../../../../../../src/material/stepper/stepper-module.ts","../../../../../../src/material/stepper/public-api.ts","../../../../../../src/material/stepper/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkStepLabel} from '@angular/cdk/stepper';\n\n@Directive({\n  selector: '[matStepLabel]',\n})\nexport class MatStepLabel extends CdkStepLabel {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Stepper data that is required for internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** Label that is rendered below optional steps. */\n  optionalLabel: string = 'Optional';\n}\n\n\n/** @docs-private */\nexport function MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl: MatStepperIntl) {\n  return parentIntl || new MatStepperIntl();\n}\n\n/** @docs-private */\nexport const MAT_STEPPER_INTL_PROVIDER = {\n  provide: MatStepperIntl,\n  deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n  useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n  TemplateRef,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatStepLabel} from './step-label';\nimport {MatStepperIntl} from './stepper-intl';\nimport {MatStepperIconContext} from './stepper-icon';\nimport {CdkStepHeader, StepState} from '@angular/cdk/stepper';\n\n\n@Component({\n  selector: 'mat-step-header',\n  templateUrl: 'step-header.html',\n  styleUrls: ['step-header.css'],\n  host: {\n    'class': 'mat-step-header mat-focus-indicator',\n    'role': 'tab',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStepHeader extends CdkStepHeader implements OnDestroy {\n  private _intlSubscription: Subscription;\n\n  /** State of the given step. */\n  @Input() state: StepState;\n\n  /** Label of the given step. */\n  @Input() label: MatStepLabel | string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Overrides for the header icons, passed in via the stepper. */\n  @Input() iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>};\n\n  /** Index of the given step. */\n  @Input() index: number;\n\n  /** Whether the given step is selected. */\n  @Input() selected: boolean;\n\n  /** Whether the given step label is active. */\n  @Input() active: boolean;\n\n  /** Whether the given step is optional. */\n  @Input() optional: boolean;\n\n  /** Whether the ripple should be disabled. */\n  @Input() disableRipple: boolean;\n\n  constructor(\n    public _intl: MatStepperIntl,\n    private _focusMonitor: FocusMonitor,\n    _elementRef: ElementRef<HTMLElement>,\n    changeDetectorRef: ChangeDetectorRef) {\n    super(_elementRef);\n    _focusMonitor.monitor(_elementRef, true);\n    this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Focuses the step header. */\n  focus() {\n    this._focusMonitor.focusVia(this._elementRef, 'program');\n  }\n\n  /** Returns string label of given step if it is a text label. */\n  _stringLabel(): string | null {\n    return this.label instanceof MatStepLabel ? null : this.label;\n  }\n\n  /** Returns MatStepLabel if the label of given step is a template label. */\n  _templateLabel(): MatStepLabel | null {\n    return this.label instanceof MatStepLabel ? this.label : null;\n  }\n\n  /** Returns the host HTML element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Template context variables that are exposed to the `matStepperIcon` instances. */\n  _getIconContext(): MatStepperIconContext {\n    return {\n      index: this.index,\n      active: this.active,\n      optional: this.optional\n    };\n  }\n\n  _getDefaultTextForState(state: StepState): string {\n    if (state == 'number') {\n      return `${this.index + 1}`;\n    }\n    if (state == 'edit') {\n      return 'create';\n    }\n    if (state == 'error') {\n      return 'warning';\n    }\n    return state;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nexport const matStepperAnimations: {\n  readonly horizontalStepTransition: AnimationTriggerMetadata;\n  readonly verticalStepTransition: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\n  horizontalStepTransition: trigger('stepTransition', [\n    state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n    state('current', style({transform: 'none', visibility: 'visible'})),\n    state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n    transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n  ]),\n\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\n  verticalStepTransition: trigger('stepTransition', [\n    state('previous', style({height: '0px', visibility: 'hidden'})),\n    state('next', style({height: '0px', visibility: 'hidden'})),\n    state('current', style({height: '*', visibility: 'visible'})),\n    transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, TemplateRef} from '@angular/core';\nimport {StepState} from '@angular/cdk/stepper';\n\n/** Template context available to an attached `matStepperIcon`. */\nexport interface MatStepperIconContext {\n  /** Index of the step. */\n  index: number;\n  /** Whether the step is currently active. */\n  active: boolean;\n  /** Whether the step is optional. */\n  optional: boolean;\n}\n\n/**\n * Template to be used to override the icons inside the step header.\n */\n@Directive({\n  selector: 'ng-template[matStepperIcon]',\n})\nexport class MatStepperIcon {\n  /** Name of the icon to be overridden. */\n  @Input('matStepperIcon') name: StepState;\n\n  constructor(public templateRef: TemplateRef<MatStepperIconContext>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  CdkStep,\n  CdkStepper,\n  StepContentPositionState,\n  STEPPER_GLOBAL_OPTIONS,\n  StepperOptions\n} from '@angular/cdk/stepper';\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  SkipSelf,\n  TemplateRef,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil, distinctUntilChanged} from 'rxjs/operators';\n\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {matStepperAnimations} from './stepper-animations';\nimport {MatStepperIcon, MatStepperIconContext} from './stepper-icon';\n\n@Component({\n  selector: 'mat-step',\n  templateUrl: 'step.html',\n  providers: [\n    {provide: ErrorStateMatcher, useExisting: MatStep},\n    {provide: CdkStep, useExisting: MatStep},\n  ],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matStep',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStep extends CdkStep implements ErrorStateMatcher {\n  /** Content for step label given by `<ng-template matStepLabel>`. */\n  @ContentChild(MatStepLabel) stepLabel: MatStepLabel;\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(@Inject(forwardRef(() => MatStepper)) stepper: MatStepper,\n              @SkipSelf() private _errorStateMatcher: ErrorStateMatcher,\n              @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    super(stepper, stepperOptions);\n  }\n\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n\n    // Custom error state checks for the validity of form that is not submitted or touched\n    // since user can trigger a form change by calling for another step without directly\n    // interacting with the current form.\n    const customErrorState = !!(control && control.invalid && this.interacted);\n\n    return originalErrorState || customErrorState;\n  }\n}\n\n\n@Directive({selector: '[matStepper]', providers: [{provide: CdkStepper, useExisting: MatStepper}]})\nexport class MatStepper extends CdkStepper implements AfterContentInit {\n  /** The list of step headers of the steps in the stepper. */\n  @ViewChildren(MatStepHeader) _stepHeader: QueryList<MatStepHeader>;\n\n  /** Steps that the stepper holds. */\n  @ContentChildren(MatStep, {descendants: true}) _steps: QueryList<MatStep>;\n\n  /** Custom icon overrides passed in by the consumer. */\n  @ContentChildren(MatStepperIcon, {descendants: true}) _icons: QueryList<MatStepperIcon>;\n\n  /** Event emitted when the current step is done transitioning in. */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Whether ripples should be disabled for the step headers. */\n  @Input() disableRipple: boolean;\n\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>} = {};\n\n  /** Stream of animation `done` events when the body expands/collapses. */\n  _animationDone = new Subject<AnimationEvent>();\n\n  ngAfterContentInit() {\n    this._icons.forEach(({name, templateRef}) => this._iconOverrides[name] = templateRef);\n\n    // Mark the component for change detection whenever the content children query changes\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._stateChanged();\n    });\n\n    this._animationDone.pipe(\n      // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n      // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n      // See https://github.com/angular/angular/issues/24084\n      distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState),\n      takeUntil(this._destroyed)\n    ).subscribe(event => {\n      if ((event.toState as StepContentPositionState) === 'current') {\n        this.animationDone.emit();\n      }\n    });\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n\n@Component({\n  selector: 'mat-horizontal-stepper',\n  exportAs: 'matHorizontalStepper',\n  templateUrl: 'stepper-horizontal.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-horizontal',\n    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n    'aria-orientation': 'horizontal',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.horizontalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatHorizontalStepper},\n    {provide: CdkStepper, useExisting: MatHorizontalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatHorizontalStepper extends MatStepper {\n  /** Whether the label should display in bottom or end position. */\n  @Input()\n  labelPosition: 'bottom' | 'end' = 'end';\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n\n@Component({\n  selector: 'mat-vertical-stepper',\n  exportAs: 'matVerticalStepper',\n  templateUrl: 'stepper-vertical.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-vertical',\n    'aria-orientation': 'vertical',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.verticalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatVerticalStepper},\n    {provide: CdkStepper, useExisting: MatVerticalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatVerticalStepper extends MatStepper {\n  constructor(\n    @Optional() dir: Directionality,\n    changeDetectorRef: ChangeDetectorRef,\n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef?: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) _document?: any) {\n    super(dir, changeDetectorRef, elementRef, _document);\n    this._orientation = 'vertical';\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkStepperNext, CdkStepperPrevious} from '@angular/cdk/stepper';\nimport {Directive} from '@angular/core';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperNext]',\n  host: {\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperNext extends CdkStepperNext {\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperPrevious]',\n  host: {\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperPrevious extends CdkStepperPrevious {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ErrorStateMatcher, MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {MatHorizontalStepper, MatStep, MatStepper, MatVerticalStepper} from './stepper';\nimport {MatStepperNext, MatStepperPrevious} from './stepper-button';\nimport {MatStepperIcon} from './stepper-icon';\nimport {MAT_STEPPER_INTL_PROVIDER} from './stepper-intl';\n\n\n@NgModule({\n  imports: [\n    MatCommonModule,\n    CommonModule,\n    PortalModule,\n    MatButtonModule,\n    CdkStepperModule,\n    MatIconModule,\n    MatRippleModule,\n  ],\n  exports: [\n    MatCommonModule,\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  declarations: [\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n})\nexport class MatStepperModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './stepper-module';\nexport * from './step-label';\nexport * from './stepper';\nexport * from './stepper-button';\nexport * from './step-header';\nexport * from './stepper-intl';\nexport * from './stepper-animations';\nexport * from './stepper-icon';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}