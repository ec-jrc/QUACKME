{"version":3,"file":"saturn-datepicker.js","sources":["ng:/saturn-datepicker/datetime/date-adapter.ts","ng:/saturn-datepicker/datetime/date-formats.ts","ng:/saturn-datepicker/datetime/native-date-adapter.ts","ng:/saturn-datepicker/datetime/native-date-formats.ts","ng:/saturn-datepicker/datetime/index.ts","ng:/saturn-datepicker/datepicker/datepicker-errors.ts","ng:/saturn-datepicker/datepicker/datepicker-intl.ts","ng:/saturn-datepicker/datepicker/calendar-body.ts","ng:/saturn-datepicker/datepicker/month-view.ts","ng:/saturn-datepicker/datepicker/multi-year-view.ts","ng:/saturn-datepicker/datepicker/year-view.ts","ng:/saturn-datepicker/datepicker/calendar.ts","ng:/saturn-datepicker/datepicker/datepicker-animations.ts","ng:/saturn-datepicker/datepicker/datepicker.ts","ng:/saturn-datepicker/datepicker/datepicker-input.ts","ng:/saturn-datepicker/datepicker/datepicker-toggle.ts","ng:/saturn-datepicker/datepicker/datepicker-module.ts","ng:/saturn-datepicker/datepicker/public-api.ts","ng:/saturn-datepicker/datepicker/index.ts","ng:/saturn-datepicker/public-api.ts","ng:/saturn-datepicker/saturn-datepicker.ts"],"names":["tslib_1.__extends","tslib_1.__param","tslib_1.__decorate","observableOf"],"mappings":"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CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC;AACnG,IAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC;AAChG,IAAE,EAAE,EAAC,CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,UAAU,EAAC,CAAC;AAChG,IAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC;AAC/F,IAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,EAAC,CAAC,EAAE,EAAE,E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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken, LOCALE_ID} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY,\n});\n\n/** @docs-private */\nexport function MAT_DATE_LOCALE_FACTORY(): string {\n  return inject(LOCALE_ID);\n}\n\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * @breaking-change 8.0.0\n */\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\n\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nexport abstract class DateAdapter<D> {\n  /** The locale to use for all dates. */\n  protected locale: any;\n\n  /** A stream that emits when the locale changes. */\n  get localeChanges(): Observable<void> { return this._localeChanges; }\n  protected _localeChanges = new Subject<void>();\n\n  /**\n   * Gets the year component of the given date.\n   * @param date The date to extract the year from.\n   * @returns The year component.\n   */\n  abstract getYear(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * @param date The date to extract the month from.\n   * @returns The month component (0-indexed, 0 = January).\n   */\n  abstract getMonth(date: D): number;\n\n  /**\n   * Gets the date of the month component of the given date.\n   * @param date The date to extract the date of the month from.\n   * @returns The month component (1-indexed, 1 = first of month).\n   */\n  abstract getDate(date: D): number;\n\n  /**\n   * Gets the day of the week component of the given date.\n   * @param date The date to extract the day of the week from.\n   * @returns The month component (0-indexed, 0 = Sunday).\n   */\n  abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Gets a list of names for the months.\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n   * @returns An ordered list of all month names, starting with January.\n   */\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets a list of names for the dates of the month.\n   * @returns An ordered list of all date of the month names, starting with '1'.\n   */\n  abstract getDateNames(): string[];\n\n  /**\n   * Gets a list of names for the days of the week.\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n   * @returns An ordered list of all weekday names, starting with Sunday.\n   */\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets the name for the year of the given date.\n   * @param date The date to get the year name for.\n   * @returns The name of the given year (e.g. '2017').\n   */\n  abstract getYearName(date: D): string;\n\n  /**\n   * Gets the first day of the week.\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\n   */\n  abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Gets the number of days in the month of the given date.\n   * @param date The date whose month should be checked.\n   * @returns The number of days in the month of the given date.\n   */\n  abstract getNumDaysInMonth(date: D): number;\n\n  /**\n   * Clones the given date.\n   * @param date The date to clone\n   * @returns A new date equal to the given date.\n   */\n  abstract clone(date: D): D;\n\n  /**\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n   * month and date.\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\n   * @returns The new date, or null if invalid.\n   */\n  abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Gets today's date.\n   * @returns Today's date.\n   */\n  abstract today(): D;\n\n  /**\n   * Parses a date from a user-provided value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   * @returns The parsed date.\n   */\n  abstract parse(value: any, parseFormat: any): D | null;\n\n  /**\n   * Formats a date as a string according to the given format.\n   * @param date The value to format.\n   * @param displayFormat The format to use to display the date as a string.\n   * @returns The formatted date string.\n   */\n  abstract format(date: D, displayFormat: any): string;\n\n  /**\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n   * calendar for each year and then finding the closest date in the new month. For example when\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n   * @param date The date to add years to.\n   * @param years The number of years to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of years added.\n   */\n  abstract addCalendarYears(date: D, years: number): D;\n\n  /**\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\n   * calendar for each month and then finding the closest date in the new month. For example when\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n   * @param date The date to add months to.\n   * @param months The number of months to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of months added.\n   */\n  abstract addCalendarMonths(date: D, months: number): D;\n\n  /**\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\n   * calendar for each day.\n   * @param date The date to add days to.\n   * @param days The number of days to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of days added.\n   */\n  abstract addCalendarDays(date: D, days: number): D;\n\n  /**\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n   * This method is used to generate date strings that are compatible with native HTML attributes\n   * such as the `min` or `max` attribute of an `<input>`.\n   * @param date The date to get the ISO date string for.\n   * @returns The ISO date string date string.\n   */\n  abstract toIso8601(date: D): string;\n\n  /**\n   * Checks whether the given object is considered a date instance by this DateAdapter.\n   * @param obj The object to check\n   * @returns Whether the object is a date instance.\n   */\n  abstract isDateInstance(obj: any): boolean;\n\n  /**\n   * Checks whether the given date is valid.\n   * @param date The date to check.\n   * @returns Whether the date is valid.\n   */\n  abstract isValid(date: D): boolean;\n\n  /**\n   * Gets date instance that is not valid.\n   * @returns An invalid date.\n   */\n  abstract invalid(): D;\n\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<sat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value: any): D | null {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale: any) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n\nexport type MatDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any,\n  }\n};\n\n\nexport const MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nlet SUPPORTS_INTL_API: boolean;\n\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch {\n  SUPPORTS_INTL_API = false;\n}\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n/** First day of week according locale.\n * Taken form moment.js source code https://github.com/moment/moment/tree/develop/src/locale\n */\nconst FIRST_DAY_OF_WEEK = {\n  af:1, ar:6, 'ar-ly':6, 'ar-ma':6, 'ar-tn':1, az:1, be:1, bg:1, bm:1, br:1, bs:1, ca:1, cs:1, cv:1,\n  cy:1, da:1, de:1, 'de-at':1, 'de-ch':1, el:1, 'en-au':1, 'en-gb':1, 'en-ie':1, 'en-nz':1, eo:1,\n  es:1, 'es-do':1, et:1, eu:1, fa:6, fi:1, fo:1, fr:1, 'fr-ch':1, fy:1, gd:1, gl:1, 'gom-latn':1,\n  hr:1, hu:1, 'hy-am':1, id:1, is:1, it:1, jv:1, ka:1, kk:1, km:1, ky:1, lb:1, lt:1, lv:1, me:1,\n  mi:1, mk:1, ms:1, 'ms-my':1, mt:1, my:1, nb:1, nl:1, 'nl-be':1, nn:1, pl:1, pt:1, 'pt-BR': 0, ro:1, ru:1,\n  sd:1, se:1, sk:1, sl:1, sq:1, sr:1, 'sr-cyrl':1, ss:1, sv:1, sw:1, 'tet':1, tg:1, 'tl-ph':1,\n  'tlh':1, tr:1, 'tzl':1, 'tzm':6, 'tzm-latn':6, 'ug-cn':1, uk:1, ur:1, uz:1, 'uz-latn':1, vi:1,\n  'x-pseudo':1, yo:1, 'zh-cn':1,\n};\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n@Injectable()\nexport class NativeDateAdapter extends DateAdapter<Date> {\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\n  private readonly _clampDate: boolean;\n\n  /**\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n   * will produce `'8/13/1800'`.\n   *\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n   * getting the string representation of a Date object from it's utc representation. We're keeping\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\n   * though.\n   */\n  useUtcForDisplay: boolean = true;\n\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, platform: Platform) {\n    super();\n    super.setLocale(matDateLocale);\n\n    // IE does its own time zone correction, so we disable this on IE.\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\n      return range(12, i =>\n          this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\n      return range(7, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is.\n    // Sometimes people use excess language definition, e.g. ru-RU,\n    // so we use fallback to two-letter language code\n    const locale = this.locale.toLowerCase();\n    return FIRST_DAY_OF_WEEK[locale] || FIRST_DAY_OF_WEEK[locale.substr(0, 2)] || 0;\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date: Date, displayFormat: Object): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      displayFormat = {...displayFormat, timeZone: 'utc'};\n\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value: any): Date | null {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n\n  isValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number) {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\n    const d = new Date(Date.UTC(\n        date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\n        date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    return dtf.format(d);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatDateFormats} from './date-formats';\n\n\nexport const MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  }\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {DateAdapter} from './date-adapter';\nimport {MAT_DATE_FORMATS} from './date-formats';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\n\nexport * from './date-adapter';\nexport * from './date-formats';\nexport * from './native-date-adapter';\nexport * from './native-date-formats';\n\n\n@NgModule({\n    imports: [PlatformModule],\n    providers: [\n        {provide: DateAdapter, useClass: NativeDateAdapter},\n    ],\n})\nexport class NativeDateModule {}\n\n\n@NgModule({\n    imports: [NativeDateModule],\n    providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\n})\nexport class SatNativeDateModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `SatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: SatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({providedIn: 'root'})\nexport class SatDatepickerIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the calendar popup (used by screen readers). */\n  calendarLabel: string = 'Calendar';\n\n  /** A label for the button used to open the calendar popup (used by screen readers). */\n  openCalendarLabel: string = 'Open calendar';\n\n  /** A label for the previous month button (used by screen readers). */\n  prevMonthLabel: string = 'Previous month';\n\n  /** A label for the next month button (used by screen readers). */\n  nextMonthLabel: string = 'Next month';\n\n  /** A label for the previous year button (used by screen readers). */\n  prevYearLabel: string = 'Previous year';\n\n  /** A label for the next year button (used by screen readers). */\n  nextYearLabel: string = 'Next year';\n\n  /** A label for the previous multi-year button (used by screen readers). */\n  prevMultiYearLabel: string = 'Previous 20 years';\n\n  /** A label for the next multi-year button (used by screen readers). */\n  nextMultiYearLabel: string = 'Next 20 years';\n\n  /** A label for the 'switch to month view' button (used by screen readers). */\n  switchToMonthViewLabel: string = 'Choose date';\n\n  /** A label for the 'switch to year view' button (used by screen readers). */\n  switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type SatCalendarCellCssClasses = string | string[] | Set<string> | {[key: string]: any};\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class SatCalendarCell {\n  constructor(public value: number,\n              public displayValue: string,\n              public ariaLabel: string,\n              public enabled: boolean,\n              public cssClasses?: SatCalendarCellCssClasses) {}\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: '[sat-calendar-body]',\n  templateUrl: 'calendar-body.html',\n  styleUrls: ['calendar-body.css'],\n  host: {\n    'class': 'mat-calendar-body',\n    'role': 'grid',\n    'aria-readonly': 'true'\n  },\n  exportAs: 'matCalendarBody',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SatCalendarBody implements OnChanges {\n  /** The label for the table. (e.g. \"Jan 2017\"). */\n  @Input() label: string;\n\n  /** Enables datepicker MouseOver effect on range mode */\n  @Input() rangeHoverEffect = true;\n\n  /** The cells to display in the table. */\n  @Input() rows: SatCalendarCell[][];\n\n  /** The value in the table that corresponds to today. */\n  @Input() todayValue: number;\n\n  /** The value in the table that is currently selected. */\n  @Input() selectedValue: number;\n\n  /** The value in the table since range of dates started.\n   * Null means no interval or interval doesn't start in this month\n   */\n  @Input() begin: number|null;\n\n  /** The value in the table representing end of dates range.\n   * Null means no interval or interval doesn't end in this month\n   */\n  @Input() end: number|null;\n\n  /** Whenever user already selected start of dates interval. */\n  @Input() beginSelected: boolean;\n\n  /** Whenever the current month is before the date already selected */\n  @Input() isBeforeSelected: boolean;\n\n  /** Whether to mark all dates as semi-selected. */\n  @Input() rangeFull: boolean;\n\n  /** Whether to use date range selection behaviour.*/\n  @Input() rangeMode = false;\n\n  /** The minimum number of free cells needed to fit the label in the first row. */\n  @Input() labelMinRequiredCells: number;\n\n  /** The number of columns in the table. */\n  @Input() numCols = 7;\n\n  /** The cell number of the active cell in the table. */\n  @Input() activeCell = 0;\n\n  /**\n   * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n   * maintained even as the table resizes.\n   */\n  @Input() cellAspectRatio = 1;\n\n  /** Emits when a new value is selected. */\n  @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** The number of blank cells to put at the beginning for the first row. */\n  _firstRowOffset: number;\n\n  /** Padding for the individual date cells. */\n  _cellPadding: string;\n\n  /** Width of an individual cell. */\n  _cellWidth: string;\n\n  /** The cell number of the hovered cell */\n  _cellOver: number;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>, private _ngZone: NgZone) { }\n\n  _cellClicked(cell: SatCalendarCell): void {\n    if (cell.enabled) {\n      this.selectedValueChange.emit(cell.value);\n    }\n  }\n\n  _mouseOverCell(cell: SatCalendarCell): void {\n    if (this.rangeHoverEffect) this._cellOver = cell.value;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const columnChanges = changes['numCols'];\n    const {rows, numCols} = this;\n\n    if (changes['rows'] || columnChanges) {\n      this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n    }\n\n    if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n      this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n    }\n\n    if (columnChanges || !this._cellWidth) {\n      this._cellWidth = `${100 / numCols}%`;\n    }\n\n    if (changes.activeCell) {\n      this._cellOver = this.activeCell + 1;\n    }\n  }\n\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\n    let cellNumber = rowIndex * this.numCols + colIndex;\n\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber == this.activeCell;\n  }\n\n  /** Whenever to mark cell as semi-selected (inside dates interval). */\n  _isSemiSelected(date: number) {\n    if (!this.rangeMode) {\n      return false;\n    }\n    if (this.rangeFull) {\n      return true;\n    }\n    /** Do not mark start and end of interval. */\n    if (date === this.begin || date === this.end) {\n      return false;\n    }\n    if (this.begin && !this.end) {\n      return date > this.begin;\n    }\n    if (this.end && !this.begin) {\n      return date < this.end;\n    }\n    return date > <number>this.begin && date < <number>this.end;\n  }\n\n  /** Whenever to mark cell as semi-selected before the second date is selected (between the begin cell and the hovered cell). */\n  _isBetweenOverAndBegin(date: number): boolean {\n    if (!this._cellOver || !this.rangeMode || !this.beginSelected) {\n      return false;\n    }\n    if (this.isBeforeSelected && !this.begin) {\n      return date > this._cellOver;\n    }\n    if (this._cellOver > this.begin) {\n      return date > this.begin && date < this._cellOver;\n    }\n    if (this._cellOver < this.begin) {\n      return date < this.begin && date > this._cellOver;\n    }\n    return false;\n  }\n\n  /** Whenever to mark cell as begin of the range. */\n  _isBegin(date: number): boolean {\n    if (this.rangeMode && this.beginSelected && this._cellOver) {\n      if (this.isBeforeSelected && !this.begin) {\n        return this._cellOver === date;\n      } else {\n        return (this.begin === date && !(this._cellOver < this.begin)) ||\n          (this._cellOver === date && this._cellOver < this.begin)\n      }\n    }\n    return this.begin === date;\n  }\n\n  /** Whenever to mark cell as end of the range. */\n  _isEnd(date: number): boolean {\n    if (this.rangeMode && this.beginSelected && this._cellOver) {\n      if (this.isBeforeSelected && !this.begin) {\n        return false;\n      } else {\n        return (this.end === date && !(this._cellOver > this.begin)) ||\n          (this._cellOver === date && this._cellOver > this.begin)\n      }\n    }\n    return this.end === date;\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        const activeCell: HTMLElement | null =\n            this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n\n        if (activeCell) {\n          activeCell.focus();\n        }\n      });\n    });\n  }\n\n  /** Whenever to highlight the target cell when selecting the second date in range mode */\n  _previewCellOver(date: number): boolean {\n    return this._cellOver === date && this.rangeMode && this.beginSelected;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {DateAdapter} from '../datetime/date-adapter';\nimport {MAT_DATE_FORMATS, MatDateFormats} from '../datetime/date-formats';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {SatCalendarBody, SatCalendarCell, SatCalendarCellCssClasses} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-month-view',\n  templateUrl: 'month-view.html',\n  exportAs: 'matMonthView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SatMonthView<D> implements AfterContentInit {\n\n  /** Current start of interval. */\n  @Input()\n  get beginDate(): D | null { return this._beginDate; }\n  set beginDate(value: D | null) {\n    this._beginDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this.updateRangeSpecificValues();\n  }\n  private _beginDate: D | null;\n\n  /** Current end of interval. */\n  @Input()\n  get endDate(): D | null { return this._endDate; }\n  set endDate(value: D | null) {\n    this._endDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this.updateRangeSpecificValues();\n  }\n  private _endDate: D | null;\n\n  /** Allow selecting range of dates. */\n  @Input() rangeMode = false;\n\n  /** Enables datepicker MouseOver effect on range mode */\n  @Input() rangeHoverEffect = true;\n\n  /** Enables datepicker closing after selection */\n  @Input() closeAfterSelection = true;\n\n  /** First day of interval. */\n  _beginDateNumber: number | null;\n\n  /* Last day of interval. */\n  _endDateNumber: number | null;\n\n  /** Whenever full month is inside dates interval. */\n  _rangeFull: boolean | null = false;\n\n  /** Whenever user already selected start of dates interval. */\n  @Input() set beginDateSelected(value: D | null) { this._beginDateSelected = value } ;\n\n  /** Whenever user already selected start of dates interval. An inner property that avoid asynchronous problems */\n  _beginDateSelected: D | null;\n\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedDate = this._getDateInCurrentMonth(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => SatCalendarCellCssClasses;\n\n  /** Emits when a new date is selected. */\n  @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(SatCalendarBody, {static: false}) _matCalendarBody: SatCalendarBody;\n\n  /** The label for this month (e.g. \"January 2017\"). */\n  _monthLabel: string;\n\n  /** Grid of calendar cells representing the dates of the month. */\n  _weeks: SatCalendarCell[][];\n\n  /** The number of blank cells in the first row before the 1st of the month. */\n  _firstWeekOffset: number;\n\n  /**\n   * The date of the month that the currently selected Date falls on.\n   * Null if the currently selected Date is in another month.\n   */\n  _selectedDate: number | null;\n\n  /** The date of the month that today falls on. Null if today is in another month. */\n  _todayDate: number | null;\n\n  /** The names of the weekdays. */\n  _weekdays: {long: string, narrow: string}[];\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Handles when a new date is selected. */\n  _dateSelected(date: number) {\n\n    if (this.rangeMode) {\n\n      const selectedYear = this._dateAdapter.getYear(this.activeDate);\n      const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n      const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n      if (!this._beginDateSelected) { // At first click emit the same start and end of interval\n        this._beginDateSelected = selectedDate;\n        this.selectedChange.emit(selectedDate);\n      } else {\n        this._beginDateSelected = null;\n        this.selectedChange.emit(selectedDate);\n        this._userSelection.emit();\n      }\n      this._createWeekCells();\n      this.activeDate = selectedDate;\n      this._focusActiveCell();\n    } else if (this._selectedDate != date) {\n\n      const selectedYear = this._dateAdapter.getYear(this.activeDate);\n      const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n      const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n      this.selectedChange.emit(selectedDate);\n      this._userSelection.emit();\n      this._createWeekCells();\n    }\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            1 - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n              this._dateAdapter.getDate(this._activeDate)));\n        break;\n      case PAGE_UP:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n      case SPACE:\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n          this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n          if (!this._beginDateSelected) {\n            this._userSelection.emit();\n          }\n          if (this._beginDateSelected || !this.closeAfterSelection) {\n            this._focusActiveCell();\n          }\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this month view. */\n  _init() {\n    this.updateRangeSpecificValues();\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n    this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n    this._monthLabel =\n        this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n            .toLocaleUpperCase();\n\n    let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),\n        this._dateAdapter.getMonth(this.activeDate), 1);\n    this._firstWeekOffset =\n        (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n         this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n    this._initWeekdays();\n    this._createWeekCells();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Initializes the weekdays. */\n  private _initWeekdays() {\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    let weekdays = longWeekdays.map((long, i) => {\n        return {long, narrow: narrowWeekdays[i]};\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n  }\n\n  /** Creates SatCalendarCells for the dates in this month. */\n  private _createWeekCells() {\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    const dateNames = this._dateAdapter.getDateNames();\n    this._weeks = [[]];\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      const date = this._dateAdapter.createDate(\n            this._dateAdapter.getYear(this.activeDate),\n            this._dateAdapter.getMonth(this.activeDate), i + 1);\n      const enabled = this._shouldEnableDate(date);\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n      const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n      this._weeks[this._weeks.length - 1]\n          .push(new SatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n    }\n  }\n\n  /** Date filter for the month */\n  private _shouldEnableDate(date: D): boolean {\n    return !!date &&\n        (!this.dateFilter || this.dateFilter(date)) &&\n        (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n        (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n  }\n\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   */\n  private _getDateInCurrentMonth(date: D | null): number | null {\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n        this._dateAdapter.getDate(date) : null;\n  }\n\n  /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n  private _hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n              this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n  /** Updates range full parameter on each begin or end of interval update.\n   * Necessary to display calendar-body correctly\n   */\n  private updateRangeSpecificValues(): void {\n    if (this.rangeMode) {\n      this._beginDateNumber = this._getDateInCurrentMonth(this._beginDate);\n      this._endDateNumber = this._getDateInCurrentMonth(this._endDate);\n      this._rangeFull = this.beginDate && this.endDate && !this._beginDateNumber &&\n        !this._endDateNumber &&\n        this._dateAdapter.compareDate(this.beginDate, this.activeDate) <= 0 &&\n        this._dateAdapter.compareDate(this.activeDate, this.endDate) <= 0;\n    } else {\n      this._beginDateNumber = this._endDateNumber = null;\n      this._rangeFull = false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {SatCalendarBody, SatCalendarCell} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {DateAdapter} from '../datetime/date-adapter';\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-multi-year-view',\n  templateUrl: 'multi-year-view.html',\n  exportAs: 'matMultiYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SatMultiYearView<D> implements AfterContentInit {\n  /** The date to display in this multi-year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n    if (!isSameMultiYearView(\n      this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new year is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected year. This doesn't imply a change on the selected date */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(SatCalendarBody, {static: false}) _matCalendarBody: SatCalendarBody;\n\n  /** Grid of calendar cells representing the currently displayed years. */\n  _years: SatCalendarCell[][];\n\n  /** The year that today falls on. */\n  _todayYear: number;\n\n  /** The year of the selected date. Null if the selected date is null. */\n  _selectedYear: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Initializes this multi-year view. */\n  _init() {\n    this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n\n    // We want a range years such that we maximize the number of\n    // enabled dates visible at once. This prevents issues where the minimum year\n    // is the last item of a page OR the maximum year is the first item of a page.\n\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view.\n    const activeYear = this._dateAdapter.getYear(this._activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(\n      this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n\n    this._years = [];\n    for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n      row.push(minYearOfPage + i);\n      if (row.length == yearsPerRow) {\n        this._years.push(row.map(year => this._createCellForYear(year)));\n        row = [];\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Handles when a new year is selected. */\n  _yearSelected(year: number) {\n    this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n    let month = this._dateAdapter.getMonth(this.activeDate);\n    let daysInMonth =\n        this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n    this.selectedChange.emit(this._dateAdapter.createDate(year, month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n          -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n          yearsPerPage - getActiveOffset(\n            this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n        break;\n      case ENTER:\n      case SPACE:\n        this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  _getActiveCell(): number {\n    return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Creates an SatCalendarCell for the given year. */\n  private _createCellForYear(year: number) {\n    let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n    return new SatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n  }\n\n  /** Whether the given year is enabled. */\n  private _shouldEnableYear(year: number) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null ||\n        (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n        (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n      return false;\n    }\n\n    // enable if it reaches here and there's no filter defined\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n\n    // If any date in the year is enabled count the year as enabled.\n    for (let date = firstOfYear; this._dateAdapter.getYear(date) == year;\n      date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n\nexport function isSameMultiYearView<D>(\n  dateAdapter: DateAdapter<D>, date1: D, date2: D, minDate: D | null, maxDate: D | null): boolean {\n  const year1 = dateAdapter.getYear(date1);\n  const year2 = dateAdapter.getYear(date2);\n  const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n  return Math.floor((year1 - startingYear) / yearsPerPage) ===\n          Math.floor((year2 - startingYear) / yearsPerPage);\n}\n\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nexport function getActiveOffset<D>(\n  dateAdapter: DateAdapter<D>, activeDate: D, minDate: D | null, maxDate: D | null): number {\n  const activeYear = dateAdapter.getYear(activeDate);\n  return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)),\n    yearsPerPage);\n}\n\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear<D>(\n  dateAdapter: DateAdapter<D>, minDate: D | null, maxDate: D | null): number {\n  let startingYear = 0;\n  if (maxDate) {\n    const maxYear = dateAdapter.getYear(maxDate);\n    startingYear = maxYear - yearsPerPage + 1;\n  } else if (minDate) {\n    startingYear = dateAdapter.getYear(minDate);\n  }\n  return startingYear;\n}\n\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo (a: number, b: number): number {\n  return (a % b + b) % b;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {SatCalendarBody, SatCalendarCell} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {DateAdapter} from '../datetime/date-adapter';\nimport {MAT_DATE_FORMATS, MatDateFormats} from '../datetime/date-formats';\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-year-view',\n  templateUrl: 'year-view.html',\n  exportAs: 'matYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SatYearView<D> implements AfterContentInit {\n  /** The date to display in this year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new month is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected month. This doesn't imply a change on the selected date */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(SatCalendarBody, {static: false}) _matCalendarBody: SatCalendarBody;\n\n  /** Grid of calendar cells representing the months of the year. */\n  _months: SatCalendarCell[][];\n\n  /** The label for this year (e.g. \"2017\"). */\n  _yearLabel: string;\n\n  /** The month in this year that today falls on. Null if today is in a different year. */\n  _todayMonth: number | null;\n\n  /**\n   * The month in this year that the selected Date falls on.\n   * Null if the selected Date is in a different year.\n   */\n  _selectedMonth: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Handles when a new month is selected. */\n  _monthSelected(month: number) {\n    const normalizedDate =\n          this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n    this.monthSelected.emit(normalizedDate);\n\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n\n    this.selectedChange.emit(this._dateAdapter.createDate(\n        this._dateAdapter.getYear(this.activeDate), month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            -this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            11 - this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n      case SPACE:\n        this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this year view. */\n  _init() {\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n\n    let monthNames = this._dateAdapter.getMonthNames('short');\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(\n        month => this._createCellForMonth(month, monthNames[month])));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  private _getMonthInCurrentYear(date: D | null) {\n    return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n        this._dateAdapter.getMonth(date) : null;\n  }\n\n  /** Creates an SatCalendarCell for the given month. */\n  private _createCellForMonth(month: number, monthName: string) {\n    let ariaLabel = this._dateAdapter.format(\n        this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1),\n        this._dateFormats.display.monthYearA11yLabel);\n    return new SatCalendarCell(\n        month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n  }\n\n  /** Whether the given month is enabled. */\n  private _shouldEnableMonth(month: number) {\n\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\n\n    if (month === undefined || month === null ||\n        this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n        this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n      return false;\n    }\n\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month;\n         date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is after this.maxDate, considering\n   * just the month and year of this.maxDate\n   */\n  private _isYearAndMonthAfterMaxDate(year: number, month: number) {\n    if (this.maxDate) {\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n\n      return year > maxYear || (year === maxYear && month > maxMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is before this.minDate, considering\n   * just the month and year of this.minDate\n   */\n  private _isYearAndMonthBeforeMinDate(year: number, month: number) {\n    if (this.minDate) {\n      const minYear = this._dateAdapter.getYear(this.minDate);\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\n\n      return year < minYear || (year === minYear && month < minMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentPortal, ComponentType, Portal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {SatCalendarCellCssClasses} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {SatDatepickerIntl} from './datepicker-intl';\nimport {SatMonthView} from './month-view';\nimport {\n  getActiveOffset,\n  isSameMultiYearView,\n  SatMultiYearView,\n  yearsPerPage\n} from './multi-year-view';\nimport {SatYearView} from './year-view';\n\nimport {SatDatepickerRangeValue} from './datepicker-input';\nimport {DateAdapter} from '../datetime/date-adapter';\nimport {MAT_DATE_FORMATS, MatDateFormats} from '../datetime/date-formats';\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type SatCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for SatCalendar */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-calendar-header',\n  templateUrl: 'calendar-header.html',\n  exportAs: 'matCalendarHeader',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SatCalendarHeader<D> {\n  constructor(private _intl: SatDatepickerIntl,\n              @Inject(forwardRef(() => SatCalendar)) public calendar: SatCalendar<D>,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  /** The label for the current calendar view. */\n  get periodButtonText(): string {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter\n          .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n              .toLocaleUpperCase();\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYearName(this.calendar.activeDate);\n    }\n\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view, and the last year is\n    // just yearsPerPage - 1 away.\n    const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(\n      this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n    const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n    return `${minYearOfPage} \\u2013 ${maxYearOfPage}`;\n  }\n\n  get periodButtonLabel(): string {\n    return this.calendar.currentView == 'month' ?\n        this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n  }\n\n  /** The label for the previous button. */\n  get prevButtonLabel(): string {\n    return {\n      'month': this._intl.prevMonthLabel,\n      'year': this._intl.prevYearLabel,\n      'multi-year': this._intl.prevMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** The label for the next button. */\n  get nextButtonLabel(): string {\n    return {\n      'month': this._intl.nextMonthLabel,\n      'year': this._intl.nextYearLabel,\n      'multi-year': this._intl.nextMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** Handles user clicks on the period label.\n   * Option`calendar.orderPeriodLabel` sort the label period views.\n   * - Default [multi-year]: multi-year then back to month\n   * - Month [month]: month > year > multi-year\n   */\n  currentPeriodClicked(): void {\n    const mouthFirstOrder: SatCalendarView[] = ['month', 'year', 'multi-year'];\n    const defaultOrder: SatCalendarView[] = ['month', 'multi-year', 'month'];\n    const orderPeriod = this.calendar.orderPeriodLabel === 'month' ? mouthFirstOrder : defaultOrder;\n    switch (this.calendar.currentView) {\n      case 'month':\n        this.calendar.currentView = orderPeriod[1];\n        break;\n      case 'year':\n          this.calendar.currentView = orderPeriod[2]\n          break;\n      default:\n        this.calendar.currentView = orderPeriod[0]\n        break;\n    }\n  }\n\n  /** Handles user clicks on the previous button. */\n  previousClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage\n            );\n  }\n\n  /** Handles user clicks on the next button. */\n  nextClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                    this.calendar.currentView == 'year' ? 1 : yearsPerPage\n            );\n  }\n\n  /** Whether the previous period button is enabled. */\n  previousEnabled(): boolean {\n    if (!this.calendar.minDate) {\n      return true;\n    }\n    return !this.calendar.minDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n  }\n\n  /** Whether the next period button is enabled. */\n  nextEnabled(): boolean {\n    return !this.calendar.maxDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n  }\n\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\n  private _isSameView(date1: D, date2: D): boolean {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n          this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n    }\n    // Otherwise we are in 'multi-year' view.\n    return isSameMultiYearView(\n      this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n  }\n}\n\n/** Default footer for SatCalendar */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-calendar-footer',\n  templateUrl: 'calendar-footer.html',\n  exportAs: 'matCalendarFooter',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SatCalendarFooter<D> {\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-calendar',\n  templateUrl: 'calendar.html',\n  styleUrls: ['calendar.css'],\n  host: {\n    'class': 'mat-calendar',\n  },\n  exportAs: 'matCalendar',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SatCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n\n    /** Beginning of date range. */\n    @Input()\n    get beginDate(): D | null { return this._beginDate; }\n    set beginDate(value: D | null) {\n        this._beginDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    private _beginDate: D | null;\n\n    /** Date range end. */\n    @Input()\n    get endDate(): D | null { return this._endDate; }\n    set endDate(value: D | null) {\n        this._endDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    private _endDate: D | null;\n\n    /** Whenever datepicker is for selecting range of dates. */\n    @Input() rangeMode = false;\n\n    /** Enables datepicker MouseOver effect on range mode */\n    @Input() rangeHoverEffect = true;\n\n    /** Enables datepicker closing after selection */\n    @Input() closeAfterSelection = true;\n\n    /** Emits when new pair of dates selected. */\n    @Output() dateRangesChange = new EventEmitter<SatDatepickerRangeValue<D>>();\n\n    /** Whenever user already selected start of dates interval. */\n    beginDateSelected: D | boolean = false;\n\n    /** Emits when a new start date has been selected in range mode. */\n    @Output() beginDateSelectedChange = new EventEmitter<D>();\n\n    /** An input indicating the type of the header component, if set. */\n  @Input() headerComponent: ComponentType<any>;\n\n  /** A portal containing the header component type for this calendar. */\n  _calendarHeaderPortal: Portal<any>;\n\n  /** An input indicating the type of the footer component, if set. */\n  @Input() footerComponent: ComponentType<any>;\n\n  /** A portal containing the footer component type for this calendar. */\n  _calendarFooterPortal: Portal<any>;\n\n  private _intlChanges: Subscription;\n\n  /**\n   * Used for scheduling that focus should be moved to the active cell on the next tick.\n   * We need to schedule it, rather than do it immediately, because we have to wait\n   * for Angular to re-evaluate the view children.\n   */\n  private _moveFocusOnNextTick = false;\n\n  /** A date representing the period (month or year) to start the calendar in. */\n  @Input()\n  get startAt(): D | null { return this._startAt; }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** Whether the calendar should be started in month or year view. */\n  @Input() startView: SatCalendarView = 'month';\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => SatCalendarCellCssClasses;\n\n  /** Order the views when clicking on period label button */\n  @Input() orderPeriodLabel: 'multi-year' | 'month' = 'multi-year';\n\n  /** Emits when the currently selected date changes. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the year chosen in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the month chosen in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Reference to the current month view component. */\n  @ViewChild(SatMonthView, {static: false}) monthView: SatMonthView<D>;\n\n  /** Reference to the current year view component. */\n  @ViewChild(SatYearView, {static: false}) yearView: SatYearView<D>;\n\n  /** Reference to the current multi-year view component. */\n  @ViewChild(SatMultiYearView, {static: false}) multiYearView: SatMultiYearView<D>;\n\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  get activeDate(): D { return this._clampedActiveDate; }\n  set activeDate(value: D) {\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n    this.stateChanges.next();\n    this._changeDetectorRef.markForCheck();\n  }\n  private _clampedActiveDate: D;\n\n  /** Whether the calendar is in month view. */\n  get currentView(): SatCalendarView { return this._currentView; }\n  set currentView(value: SatCalendarView) {\n    this._currentView = value;\n    this._moveFocusOnNextTick = true;\n    this._changeDetectorRef.markForCheck();\n  }\n  private _currentView: SatCalendarView;\n\n  /**\n   * Emits whenever there is a state change that the header may need to respond to.\n   */\n  stateChanges = new Subject<void>();\n\n  constructor(_intl: SatDatepickerIntl,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              private _changeDetectorRef: ChangeDetectorRef) {\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._intlChanges = _intl.changes.subscribe(() => {\n      _changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    });\n  }\n\n  ngAfterContentInit() {\n    this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || SatCalendarHeader);\n    this._calendarFooterPortal = new ComponentPortal(this.footerComponent || SatCalendarFooter);\n    this.activeDate = this.startAt || this._dateAdapter.today();\n\n    // Assign to the private property since we don't want to move focus on init.\n    this._currentView = this.startView;\n  }\n\n  ngAfterViewChecked() {\n    if (this._moveFocusOnNextTick) {\n      this._moveFocusOnNextTick = false;\n      this.focusActiveCell();\n    }\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const change =\n        changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n\n    if (change && !change.firstChange) {\n      const view = this._getCurrentViewComponent();\n\n      if (view) {\n        // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n        // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n        this._changeDetectorRef.detectChanges();\n        view._init();\n      }\n    }\n\n    this.stateChanges.next();\n  }\n\n  focusActiveCell() {\n    this._getCurrentViewComponent()._focusActiveCell();\n  }\n\n  /** Updates today's date after an update of the active date */\n  updateTodaysDate() {\n    let view = this.currentView == 'month' ? this.monthView :\n            (this.currentView == 'year' ? this.yearView : this.multiYearView);\n\n    view.ngAfterContentInit();\n  }\n\n  /** Handles date selection in the month view. */\n  _dateSelected(date: D): void {\n    if (this.rangeMode) {\n        if (!this.beginDateSelected) {\n          this.beginDateSelected = date;\n          this.beginDate = date;\n          this.endDate = date;\n          this.beginDateSelectedChange.emit(date);\n        } else {\n          this.beginDateSelected = false;\n          if (this._dateAdapter.compareDate(<D>this.beginDate, date) <= 0) {\n            this.endDate = date;\n          } else {\n            this.endDate = this.beginDate;\n            this.beginDate = date;\n          }\n          this.dateRangesChange.emit({begin: <D>this.beginDate, end: this.endDate});\n        }\n    } else if (!this._dateAdapter.sameDate(date, this.selected)) {\n      this.selectedChange.emit(date);\n    }\n  }\n\n  /** Handles year selection in the multiyear view. */\n  _yearSelectedInMultiYearView(normalizedYear: D) {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Handles month selection in the year view. */\n  _monthSelectedInYearView(normalizedMonth: D) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  _userSelected(): void {\n    this._userSelection.emit();\n  }\n\n  /** Handles year/month selection in the multi-year/year views. */\n  _goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n    this.activeDate = date;\n    this.currentView = view;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Returns the component instance that corresponds to the current calendar view. */\n  private _getCurrentViewComponent() {\n    return this.monthView || this.yearView || this.multiYearView;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nexport const matDatepickerAnimations: {\n  readonly transformPanel: AnimationTriggerMetadata;\n  readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n  /** Transforms the height of the datepicker's calendar. */\n  transformPanel: trigger('transformPanel', [\n    state('void', style({\n      opacity: 0,\n      transform: 'scale(1, 0.8)'\n    })),\n    transition('void => enter',  animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n      opacity: 1,\n      transform: 'scale(1, 1)'\n    }))),\n    transition('* => void', animate('100ms linear', style({opacity: 0})))\n  ]),\n\n  /** Fades in the content of the calendar. */\n  fadeInCalendar: trigger('fadeInCalendar', [\n    state('void', style({opacity: 0})),\n    state('enter', style({opacity: 1})),\n\n    // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n    // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n    transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  mixinColor,\n  ThemePalette,\n} from '@angular/material/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {merge, Subject, Subscription} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {SatCalendar} from './calendar';\nimport {matDatepickerAnimations} from './datepicker-animations';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {SatCalendarCellCssClasses} from './calendar-body';\nimport {SatDatepickerInput, SatDatepickerRangeValue} from './datepicker-input';\nimport {DateAdapter} from '../datetime/date-adapter';\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('sat-datepicker-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n\n// Boilerplate for applying mixins to SatDatepickerContent.\n/** @docs-private */\nclass SatDatepickerContentBase {\n  constructor(public _elementRef: ElementRef) { }\n}\nconst _SatDatepickerContentMixinBase: CanColorCtor & typeof SatDatepickerContentBase =\n    mixinColor(SatDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * SatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-datepicker-content',\n  templateUrl: 'datepicker-content.html',\n  styleUrls: ['datepicker-content.css'],\n  host: {\n    'class': 'mat-datepicker-content',\n    '[@transformPanel]': '\"enter\"',\n    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n  },\n  animations: [\n    matDatepickerAnimations.transformPanel,\n    matDatepickerAnimations.fadeInCalendar,\n  ],\n  exportAs: 'matDatepickerContent',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color'],\n})\nexport class SatDatepickerContent<D> extends _SatDatepickerContentMixinBase\n  implements AfterViewInit, CanColor {\n\n  /** Reference to the internal calendar component. */\n  @ViewChild(SatCalendar, {static: false}) _calendar: SatCalendar<D>;\n\n  /** Reference to the datepicker that created the overlay. */\n  datepicker: SatDatepicker<D>;\n\n  /** Whether the datepicker is above or below the input. */\n  _isAbove: boolean;\n\n  constructor(elementRef: ElementRef) {\n    super(elementRef);\n  }\n\n  ngAfterViewInit() {\n    this._calendar.focusActiveCell();\n  }\n\n  close() {\n    if (this.datepicker.closeAfterSelection) {\n      this.datepicker.close();\n    }\n  }\n}\n\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n  moduleId: module.id,\n  selector: 'sat-datepicker',\n  template: '',\n  exportAs: 'matDatepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SatDatepicker<D> implements OnDestroy, CanColor {\n\n  /** Whenever datepicker is for selecting range of dates. */\n  @Input()\n  get rangeMode(): boolean {\n    return this._rangeMode;\n  }\n  set rangeMode(mode: boolean) {\n    this._rangeMode = mode;\n    if (this.rangeMode) {\n      this._validSelected = null;\n    } else {\n      this._beginDate = this._endDate = null;\n    }\n  }\n  private _rangeMode;\n\n  /** Start of dates interval. */\n  @Input()\n  get beginDate(): D | null { return this._beginDate; }\n  set beginDate(value: D | null) {\n    this._validSelected = null;\n    this._beginDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _beginDate: D | null;\n\n  /** End of dates interval. */\n  @Input()\n  get endDate(): D | null { return this._endDate; }\n  set endDate(value: D | null) {\n    this._validSelected = null;\n    this._endDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  _endDate: D | null;\n\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** An input indicating the type of the custom header component for the calendar, if set. */\n  @Input() calendarHeaderComponent: ComponentType<any>;\n\n  /** An input indicating the type of the custom footer component for the calendar, if set. */\n  @Input() calendarFooterComponent: ComponentType<any>;\n\n  /** The date to open the calendar to initially. */\n  @Input()\n  get startAt(): D | null {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    if (this.rangeMode) {\n      return this._startAt || (this._datepickerInput && this._datepickerInput.value ?\n        (<SatDatepickerRangeValue<D>>this._datepickerInput.value).begin : null);\n    }\n    return this._startAt || (this._datepickerInput ? <D|null>this._datepickerInput.value : null);\n  }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** The view that the calendar should start in. */\n  @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n  /** Color palette to use on the datepicker's calendar. */\n  @Input()\n  get color(): ThemePalette {\n    return this._color ||\n        (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n  }\n  set color(value: ThemePalette) {\n    this._color = value;\n  }\n  _color: ThemePalette;\n\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   */\n  @Input()\n  get touchUi(): boolean { return this._touchUi; }\n  set touchUi(value: boolean) {\n    this._touchUi = coerceBooleanProperty(value);\n  }\n  private _touchUi = false;\n\n  /** Whether the datepicker pop-up should be disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined && this._datepickerInput ?\n        this._datepickerInput.disabled : !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._disabledChange.next(newValue);\n    }\n  }\n  private _disabled: boolean;\n\n  /**\n   * Emits selected year in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits selected month in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n  @Input() panelClass: string | string[];\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => SatCalendarCellCssClasses;\n\n  /** Emits when the datepicker has been opened. */\n  @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when the datepicker has been closed. */\n  @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Enables datepicker closing after selection */\n  @Input() closeAfterSelection = true;\n\n  /** Enables datepicker MouseOver effect on range mode */\n  @Input() rangeHoverEffect = true;\n\n  /** In range mod, enable datepicker to select the first date selected as a one-day-range,\n   * if the user closes the picker before selecting another date\n   */\n  @Input() selectFirstDateOnClose = false;\n\n  /** Order the views when clicking on period label button */\n  @Input() orderPeriodLabel: 'month' | 'multi-year' = 'multi-year';\n\n  /** Whether the calendar is open. */\n  @Input()\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { value ? this.open() : this.close(); }\n  private _opened = false;\n\n  /** The id for the datepicker calendar. */\n  id: string = `sat-datepicker-${datepickerUid++}`;\n\n  /** The currently selected date. */\n  get _selected(): D | null { return this._validSelected; }\n  set _selected(value: D | null) { this._validSelected = value; }\n  private _validSelected: D | null = null;\n\n  /** The minimum selectable date. */\n  get _minDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n\n  /** The maximum selectable date. */\n  get _maxDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n\n  get _dateFilter(): (date: D | null) => boolean {\n    return this._datepickerInput && this._datepickerInput._dateFilter;\n  }\n\n  /** A reference to the overlay when the calendar is opened as a popup. */\n  _popupRef: OverlayRef;\n\n  /** A reference to the dialog when the calendar is opened as a dialog. */\n  private _dialogRef: MatDialogRef<SatDatepickerContent<D>> | null;\n\n  /** A portal containing the calendar for this datepicker. */\n  private _calendarPortal: ComponentPortal<SatDatepickerContent<D>>;\n\n  /** Reference to the component instantiated in popup mode. */\n  private _popupComponentRef: ComponentRef<SatDatepickerContent<D>> | null;\n\n  /** The element that was focused before the datepicker was opened. */\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n  /** Subscription to value changes in the associated input element. */\n  private _inputSubscription = Subscription.EMPTY;\n\n  /** The input element this datepicker is associated with. */\n  _datepickerInput: SatDatepickerInput<D>;\n\n  /** Emits when the datepicker is disabled. */\n  readonly _disabledChange = new Subject<boolean>();\n\n  /** Emits new selected date when selected date changes. */\n  readonly _selectedChanged = new Subject<SatDatepickerRangeValue<D>|D>();\n\n  /** The date already selected by the user in range mode. */\n  private _beginDateSelected: D | null;\n\n  constructor(private _dialog: MatDialog,\n              private _overlay: Overlay,\n              private _ngZone: NgZone,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir: Directionality,\n              @Optional() @Inject(DOCUMENT) private _document: any) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._inputSubscription.unsubscribe();\n    this._disabledChange.complete();\n\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupComponentRef = null;\n    }\n  }\n\n  /** Selects the given date */\n  select(date: D): void {\n    let oldValue = this._selected;\n    this._selected = date;\n    if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n      this._selectedChanged.next(date);\n    }\n  }\n\n\n  /** Selects the given date range */\n  _selectRange(dates: SatDatepickerRangeValue<D>): void {\n    this._beginDateSelected = null;\n    if (!this._dateAdapter.sameDate(dates.begin, this.beginDate) ||\n      !this._dateAdapter.sameDate(dates.end, this.endDate)) {\n      this._selectedChanged.next(dates);\n    }\n    this._beginDate = dates.begin;\n    this._endDate = dates.end;\n  }\n  /** Emits the selected year in multiyear view */\n  _selectYear(normalizedYear: D): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Emits selected month in year view */\n  _selectMonth(normalizedMonth: D): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /**\n   * Register an input with this datepicker.\n   * @param input The datepicker input to register with this datepicker.\n   */\n  _registerInput(input: SatDatepickerInput<D>): void {\n    if (this._datepickerInput) {\n      throw Error('A SatDatepicker can only be associated with a single input.');\n    }\n    this._datepickerInput = input;\n    this._inputSubscription =\n        this._datepickerInput._valueChange\n          .subscribe((value: SatDatepickerRangeValue<D> | D | null) => {\n          if (value === null) {\n            this.beginDate = this.endDate = this._selected = null;\n            return;\n          }\n          if (value && value.hasOwnProperty('begin') && value.hasOwnProperty('end')) {\n            value = <SatDatepickerRangeValue<D>>value;\n            if (value.begin && value.end &&\n              this._dateAdapter.compareDate(value.begin, value.end) <= 0) {\n              this.beginDate = value.begin;\n              this.endDate = value.end;\n            } else {\n              this.beginDate = this.endDate = null;\n            }\n          } else {\n            this._selected = <D>value;\n          }\n        });\n  }\n\n  /** Open the calendar. */\n  open(): void {\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this._datepickerInput) {\n      throw Error('Attempted to open an SatDatepicker with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n\n  /** Close the calendar. */\n  close(): void {\n    if (!this._opened) {\n      return;\n    }\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n    if (this._dialogRef) {\n      this._dialogRef.close();\n      this._dialogRef = null;\n    }\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\n      this._calendarPortal.detach();\n    }\n    if (this._beginDateSelected && this.selectFirstDateOnClose ) {\n      this._selectRange({begin: this._beginDateSelected, end: this._beginDateSelected});\n    }\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._focusedElementBeforeOpen &&\n      typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  setBeginDateSelected(date: D): void {\n    this._beginDateSelected = date;\n  }\n\n  /** Open the calendar as a dialog. */\n  private _openAsDialog(): void {\n    // Usually this would be handled by `open` which ensures that we can only have one overlay\n    // open at a time, however since we reset the variables in async handlers some overlays\n    // may slip through if the user opens and closes multiple times in quick succession (e.g.\n    // by holding down the enter key).\n    if (this._dialogRef) {\n      this._dialogRef.close();\n    }\n\n    this._dialogRef = this._dialog.open<SatDatepickerContent<D>>(SatDatepickerContent, {\n      direction: this._dir ? this._dir.value : 'ltr',\n      viewContainerRef: this._viewContainerRef,\n      panelClass: 'mat-datepicker-dialog',\n    });\n\n    this._dialogRef.afterClosed().subscribe(() => this.close());\n    this._dialogRef.componentInstance.datepicker = this;\n    this._setColor();\n  }\n\n  /** Open the calendar as a popup. */\n  private _openAsPopup(): void {\n    if (!this._calendarPortal) {\n      this._calendarPortal = new ComponentPortal<SatDatepickerContent<D>>(SatDatepickerContent,\n                                                                          this._viewContainerRef);\n    }\n\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n\n    if (!this._popupRef.hasAttached()) {\n      this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n      this._popupComponentRef.instance.datepicker = this;\n      this._setColor();\n\n      // Update the position once the calendar has rendered.\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        this._popupRef.updatePosition();\n      });\n    }\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._createPopupPositionStrategy(),\n      hasBackdrop: true,\n      backdropClass: 'mat-overlay-transparent-backdrop',\n      direction: this._dir,\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'mat-datepicker-popup',\n    });\n\n    this._popupRef = this._overlay.create(overlayConfig);\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n    merge(\n      this._popupRef.backdropClick(),\n      this._popupRef.detachments(),\n      this._popupRef.keydownEvents().pipe(filter(event => {\n        // Closing on alt + up is only valid when there's an input associated with the datepicker.\n        return event.keyCode === ESCAPE ||\n               (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n      }))\n    ).subscribe(event => {\n      if (event) {\n        event.preventDefault();\n      }\n\n      this.close();\n    });\n  }\n\n  /** Create the popup PositionStrategy. */\n  private _createPopupPositionStrategy(): PositionStrategy {\n    return this._overlay.position()\n      .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n      .withTransformOriginOn('.mat-datepicker-content')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withLockedPosition()\n      .withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'end',\n          overlayY: 'top'\n        },\n        {\n          originX: 'end',\n          originY: 'top',\n          overlayX: 'end',\n          overlayY: 'bottom'\n        }\n      ]);\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Passes the current theme color along to the calendar overlay. */\n  private _setColor(): void {\n    const color = this.color;\n    if (this._popupComponentRef) {\n      this._popupComponentRef.instance.color = color;\n    }\n    if (this._dialogRef) {\n      this._dialogRef.componentInstance.color = color;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOWN_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport {DateAdapter} from '../datetime/date-adapter';\nimport {MAT_DATE_FORMATS, MatDateFormats} from '../datetime/date-formats';\nimport {ThemePalette} from '@angular/material/core';\nimport {MatFormField} from '@angular/material/form-field';\nimport {MAT_INPUT_VALUE_ACCESSOR} from '@angular/material/input';\nimport {Subscription} from 'rxjs';\nimport {SatDatepicker} from './datepicker';\nimport {createMissingDateImplError} from './datepicker-errors';\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SatDatepickerInput),\n  multi: true\n};\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => SatDatepickerInput),\n  multi: true\n};\n\n/**\n * Special interface to input and output dates interval.\n */\nexport interface SatDatepickerRangeValue<D> {\n  begin: D | null;\n  end: D | null;\n}\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use SatDatepickerInputEvent instead.\n */\nexport class SatDatepickerInputEvent<D> {\n  /** The new value for the target datepicker input. */\n  value: SatDatepickerRangeValue<D> | D | null;\n\n  constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    public target: SatDatepickerInput<D>,\n    /** Reference to the native input element associated with the datepicker input. */\n    public targetElement: HTMLElement) {\n    this.value = this.target.value;\n  }\n}\n\n\n/** Directive used to connect an input to a SatDatepicker. */\n@Directive({\n  selector: 'input[satDatepicker]',\n  providers: [\n    MAT_DATEPICKER_VALUE_ACCESSOR,\n    MAT_DATEPICKER_VALIDATORS,\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: SatDatepickerInput},\n  ],\n  host: {\n    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(blur)': '_onBlur()',\n    '(keydown)': '_onKeydown($event)',\n  },\n  exportAs: 'matDatepickerInput',\n})\nexport class SatDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n  /** The datepicker that this input is associated with. */\n  @Input()\n  set satDatepicker(value: SatDatepicker<D>) {\n    if (!value) {\n      return;\n    }\n\n    this._datepicker = value;\n    this._datepicker._registerInput(this);\n    this._datepickerSubscription.unsubscribe();\n\n    this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((selected: D) => {\n      this.value = selected;\n      this._cvaOnChange(selected);\n      this._onTouched();\n      this.dateInput.emit(new SatDatepickerInputEvent(this, this._elementRef.nativeElement));\n      this.dateChange.emit(new SatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    });\n  }\n  _datepicker: SatDatepicker<D>;\n\n  /** Function that can be used to filter out dates within the datepicker. */\n  @Input()\n  set matDatepickerFilter(value: (date: D | null) => boolean) {\n    this._dateFilter = value;\n    this._validatorOnChange();\n  }\n  _dateFilter: (date: SatDatepickerRangeValue<D> | D | null) => boolean;\n\n  /** The value of the input. */\n  @Input()\n  get value(): SatDatepickerRangeValue<D> | D | null {\n    return this._value;\n  }\n  set value(value:  SatDatepickerRangeValue<D> | D | null) {\n    if (value && value.hasOwnProperty('begin') && value.hasOwnProperty('end')) {\n      /** Range mode */\n      const rangeValue = <SatDatepickerRangeValue<D>>value;\n      rangeValue.begin = this._dateAdapter.deserialize(rangeValue.begin);\n      rangeValue.end = this._dateAdapter.deserialize(rangeValue.end);\n      this._lastValueValid = !rangeValue.begin || !rangeValue.end ||\n          this._dateAdapter.isValid(rangeValue.begin) && this._dateAdapter.isValid(rangeValue.end);\n      rangeValue.begin = this._getValidDateOrNull(rangeValue.begin);\n      rangeValue.end = this._getValidDateOrNull(rangeValue.end);\n      let oldDate = <SatDatepickerRangeValue<D> | null>this.value;\n      this._elementRef.nativeElement.value =\n          rangeValue && rangeValue.begin && rangeValue.end\n              ? this._dateAdapter.format(rangeValue.begin, this._dateFormats.display.dateInput) +\n                ' - ' +\n                this._dateAdapter.format(rangeValue.end, this._dateFormats.display.dateInput)\n              : '';\n      if (oldDate == null && rangeValue != null || oldDate != null && rangeValue == null ||\n          !this._dateAdapter.sameDate((<SatDatepickerRangeValue<D>>oldDate).begin,\n              rangeValue.begin) ||\n          !this._dateAdapter.sameDate((<SatDatepickerRangeValue<D>>oldDate).end,\n              rangeValue.end)) {\n        if (rangeValue.end && rangeValue.begin &&\n            this._dateAdapter\n                .compareDate(rangeValue.begin, rangeValue.end ) > 0) { // if begin > end\n          value = null;\n        }\n        this._value = value;\n        this._valueChange.emit(value);\n      }\n    } else {\n      /** Not range mode */\n      value = this._dateAdapter.deserialize(value);\n      this._lastValueValid = !value || this._dateAdapter.isValid(value);\n      value = this._getValidDateOrNull(value);\n      let oldDate = this.value;\n      this._value = value;\n      this._elementRef.nativeElement.value =\n          value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n      if (!this._dateAdapter.sameDate(<D>oldDate, value)) {\n        this._valueChange.emit(value);\n      }\n    }\n  }\n  private _value: SatDatepickerRangeValue<D> | D | null;\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): D | null { return this._min; }\n  set min(value: D | null) {\n    this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _min: D | null;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): D | null { return this._max; }\n  set max(value: D | null) {\n    this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _max: D | null;\n\n  /** Whether the datepicker-input is disabled. */\n  @Input()\n  get disabled(): boolean { return !!this._disabled; }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    const element = this._elementRef.nativeElement;\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this._disabledChange.emit(newValue);\n    }\n\n    // We need to null check the `blur` method, because it's undefined during SSR.\n    if (newValue && element.blur) {\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\n      // is problematic, because it would mean that it triggers another change detection cycle,\n      // which then causes a changed after checked error if the input element was focused before.\n      element.blur();\n    }\n  }\n  private _disabled: boolean;\n\n  /** Emits when a `change` event is fired on this `<input>`. */\n  @Output() readonly dateChange: EventEmitter<SatDatepickerInputEvent<D>> =\n      new EventEmitter<SatDatepickerInputEvent<D>>();\n\n  /** Emits when an `input` event is fired on this `<input>`. */\n  @Output() readonly dateInput: EventEmitter<SatDatepickerInputEvent<D>> =\n      new EventEmitter<SatDatepickerInputEvent<D>>();\n\n  /** Emits when the value changes (either due to user input or programmatic change). */\n  _valueChange = new EventEmitter<SatDatepickerRangeValue<D>|D|null>();\n\n  /** Emits when the disabled state has changed */\n  _disabledChange = new EventEmitter<boolean>();\n\n  _onTouched = () => {};\n\n  private _cvaOnChange: (value: any) => void = () => {};\n\n  private _validatorOnChange = () => {};\n\n  private _datepickerSubscription = Subscription.EMPTY;\n\n  private _localeSubscription = Subscription.EMPTY;\n\n  /** The form control validator for whether the input parses. */\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\n    return this._lastValueValid ?\n        null : {'matDatepickerParse': {'text': this._elementRef.nativeElement.value}};\n  }\n\n  /** The form control validator for the min date. */\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (this._datepicker.rangeMode && control.value) {\n      const beginDate =\n          this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.begin));\n      const endDate =\n          this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.end));\n      if (this.min) {\n        if (beginDate && this._dateAdapter.compareDate(this.min, beginDate) > 0) {\n          return {'matDatepickerMin': {'min': this.min, 'actual': beginDate}};\n        }\n        if (endDate && this._dateAdapter.compareDate(this.min, endDate) > 0) {\n          return {'matDatepickerMin': {'min': this.min, 'actual': endDate}};\n        }\n      }\n      return null;\n    }\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.min || !controlValue ||\n        this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n        null : {'matDatepickerMin': {'min': this.min, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the max date. */\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (this._datepicker.rangeMode && control.value) {\n      const beginDate =\n          this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.begin));\n      const endDate = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.end));\n      if (this.max) {\n        if (beginDate && this._dateAdapter.compareDate(this.max, beginDate) < 0 ) {\n          return {'matDatepickerMax': {'max': this.max, 'actual': beginDate}};\n        }\n        if (endDate && this._dateAdapter.compareDate(this.max, endDate) < 0) {\n          return {'matDatepickerMax': {'max': this.max, 'actual': endDate}};\n        }\n      }\n      return null;\n    }\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.max || !controlValue ||\n        this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n        null : {'matDatepickerMax': {'max': this.max, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the date filter. */\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (this._datepicker.rangeMode && control.value) {\n      const beginDate =\n          this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.begin));\n      const endDate = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.end));\n      return !this._dateFilter || !beginDate && !endDate ||\n          this._dateFilter(beginDate) && this._dateFilter(endDate) ?\n        null : {'matDatepickerFilter': true};\n    }\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n        null : {'matDatepickerFilter': true};\n  }\n\n  /** The form control validator for the date filter. */\n  private _rangeValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (this._datepicker.rangeMode && control.value) {\n      const beginDate =\n          this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.begin));\n      const endDate = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value.end));\n      return !beginDate || !endDate || this._dateAdapter.compareDate(beginDate, endDate) <= 0 ?\n        null : {'matDatepickerRange': true};\n    }\n    return null;\n  }\n\n  /** The combined form control validator for this input. */\n  private _validator: ValidatorFn | null =\n      Validators.compose(\n          [this._parseValidator, this._minValidator, this._maxValidator,\n            this._filterValidator, this._rangeValidator]);\n\n  /** Whether the last value set on the input was valid. */\n  private _lastValueValid = false;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>,\n      @Optional() public _dateAdapter: DateAdapter<D>,\n      @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n      @Optional() private _formField: MatFormField) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    // Update the displayed date when the locale changes.\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n      this.value = this.value;\n    });\n  }\n\n  ngOnDestroy() {\n    this._datepickerSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this._valueChange.complete();\n    this._disabledChange.complete();\n  }\n\n  /** @docs-private */\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n\n  /** @docs-private */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n   */\n  getPopupConnectionElementRef(): ElementRef {\n    return this.getConnectedOverlayOrigin();\n  }\n\n  /**\n   * Gets the element that the datepicker popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  // Implemented as part of ControlValueAccessor\n  writeValue(value: SatDatepickerRangeValue<D> | D): void {\n    this.value = value;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._cvaOnChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n    if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n      this._datepicker.open();\n      event.preventDefault();\n    }\n  }\n\n  _onInput(value: string) {\n    let date: SatDatepickerRangeValue<D>|D|null = null;\n    if (this._datepicker.rangeMode) {\n      const parts = value.split('-');\n      if (parts.length > 1) {\n          const position = Math.floor(parts.length / 2);\n          const beginDateString = parts.slice(0, position).join('-');\n          const endDateString = parts.slice(position).join('-');\n          let beginDate = this._dateAdapter.parse(beginDateString,\n              this._dateFormats.parse.dateInput);\n          let endDate = this._dateAdapter.parse(endDateString, this._dateFormats.parse.dateInput);\n          this._lastValueValid = !beginDate || !endDate || this._dateAdapter.isValid(beginDate) &&\n                                                           this._dateAdapter.isValid(endDate);\n          beginDate = this._getValidDateOrNull(beginDate);\n          endDate = this._getValidDateOrNull(endDate);\n          if (beginDate && endDate) {\n            date = <SatDatepickerRangeValue<D>>{begin: beginDate, end: endDate};\n          }\n      }\n    } else {\n      date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n      this._lastValueValid = !date || this._dateAdapter.isValid(date);\n      date = this._getValidDateOrNull(date);\n    }\n    this._value = date;\n    this._cvaOnChange(date);\n    this._valueChange.emit(date);\n    this.dateInput.emit(new SatDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  _onChange() {\n    this.dateChange.emit(new SatDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  /** Returns the palette used by the input's form field, if any. */\n  _getThemePalette(): ThemePalette {\n    return this._formField ? this._formField.color : undefined;\n  }\n\n  /** Handles blur events on the input. */\n  _onBlur() {\n    // Reformat the input only if we have a valid value.\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n\n    this._onTouched();\n  }\n\n  /** Formats a value and sets it on the input element. */\n  private _formatValue(value: SatDatepickerRangeValue<D> | D | null) {\n      if (value && value.hasOwnProperty('begin') && value.hasOwnProperty('end')) {\n          value = value as SatDatepickerRangeValue<D>;\n          this._elementRef.nativeElement.value =\n              value && value.begin && value.end\n                  ? this._dateAdapter.format(value.begin, this._dateFormats.display.dateInput) +\n                  ' - ' +\n                  this._dateAdapter.format(value.end, this._dateFormats.display.dateInput)\n                  : ''\n      }\n      else {\n            value = value as D | null\n          this._elementRef.nativeElement.value =\n              value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n      }\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {MatButton} from '@angular/material/button';\nimport {merge, of as observableOf, Subscription} from 'rxjs';\nimport {SatDatepicker} from './datepicker';\nimport {SatDatepickerIntl} from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\n@Directive({\n  selector: '[matDatepickerToggleIcon]'\n})\nexport class SatDatepickerToggleIcon {}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'sat-datepicker-toggle',\n  templateUrl: 'datepicker-toggle.html',\n  styleUrls: ['datepicker-toggle.css'],\n  host: {\n    'class': 'mat-datepicker-toggle',\n    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n    // consumer may have provided, while still being able to receive focus.\n    '[attr.tabindex]': '-1',\n    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n    '(focus)': '_button.focus()',\n  },\n  exportAs: 'matDatepickerToggle',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n  private _stateChanges = Subscription.EMPTY;\n\n  /** Datepicker instance that the button will toggle. */\n  @Input('for') datepicker: SatDatepicker<D>;\n\n  /** Tabindex for the toggle. */\n  @Input() tabIndex: number | null;\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    if (this._disabled === undefined && this.datepicker) {\n      return this.datepicker.disabled;\n    }\n\n    return !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  /** Whether ripples on the toggle should be disabled. */\n  @Input() disableRipple: boolean;\n\n  /** Custom icon set by the consumer. */\n  @ContentChild(SatDatepickerToggleIcon, {static: false}) _customIcon: SatDatepickerToggleIcon;\n\n  /** Underlying button element. */\n  @ViewChild('button', {static: false}) _button: MatButton;\n\n  constructor(\n    public _intl: SatDatepickerIntl,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Attribute('tabindex') defaultTabIndex: string) {\n\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['datepicker']) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n\n  _open(event: Event): void {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\n\n  private _watchStateChanges() {\n    const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : observableOf();\n    const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n        this.datepicker._datepickerInput._disabledChange : observableOf();\n    const datepickerToggled = this.datepicker ?\n        merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n        observableOf();\n\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(\n      this._intl.changes,\n      datepickerDisabled,\n      inputDisabled,\n      datepickerToggled\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {SatCalendar, SatCalendarHeader, SatCalendarFooter} from './calendar';\nimport {SatCalendarBody} from './calendar-body';\nimport {\n  SatDatepicker,\n  SatDatepickerContent,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './datepicker';\nimport {SatDatepickerInput} from './datepicker-input';\nimport {SatDatepickerIntl} from './datepicker-intl';\nimport {SatDatepickerToggle, SatDatepickerToggleIcon} from './datepicker-toggle';\nimport {SatMonthView} from './month-view';\nimport {SatMultiYearView} from './multi-year-view';\nimport {SatYearView} from './year-view';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatDialogModule,\n    OverlayModule,\n    A11yModule,\n    PortalModule,\n  ],\n  exports: [\n    SatCalendar,\n    SatCalendarBody,\n    SatDatepicker,\n    SatDatepickerContent,\n    SatDatepickerInput,\n    SatDatepickerToggle,\n    SatDatepickerToggleIcon,\n    SatMonthView,\n    SatYearView,\n    SatMultiYearView,\n    SatCalendarHeader,\n    SatCalendarFooter,\n  ],\n  declarations: [\n    SatCalendar,\n    SatCalendarBody,\n    SatDatepicker,\n    SatDatepickerContent,\n    SatDatepickerInput,\n    SatDatepickerToggle,\n    SatDatepickerToggleIcon,\n    SatMonthView,\n    SatYearView,\n    SatMultiYearView,\n    SatCalendarHeader,\n    SatCalendarFooter,\n  ],\n  providers: [\n    SatDatepickerIntl,\n    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  ],\n  entryComponents: [\n    SatDatepickerContent,\n    SatCalendarHeader,\n    SatCalendarFooter,\n  ]\n})\nexport class SatDatepickerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './datepicker-module';\nexport * from './calendar';\nexport * from './calendar-body';\nexport * from './datepicker';\nexport * from './datepicker-animations';\nexport * from './datepicker-input';\nexport * from './datepicker-intl';\nexport * from './datepicker-toggle';\nexport * from './month-view';\nexport * from './year-view';\nexport {SatMultiYearView, yearsPerPage, yearsPerRow} from './multi-year-view';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './datetime/index';\nexport * from './datepicker/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}